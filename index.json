{
  "matrices": [
    {
      "title": "Verify Credential - Data Integrity",
      "ctx": null,
      "suites": [
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:132888fc-eb85-45f0-a290-fd4e68399496",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 798,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 321,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:dcf35d85-bd72-4b3e-b0fe-45299d416508",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1120,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 87,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:375be79d-b0da-4bd3-be44-9fb42963a1bd",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1207,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 71,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:99ddee19-7a5c-4c85-b2a3-44d7114bc287",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1278,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 76,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:c2b5aacd-fd06-493a-8f45-74f463d0192d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1355,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 155,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:db62594a-0fed-4eba-aecc-b60e0895a047",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1510,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 93,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:d9316bbe-8f10-46a8-b4b7-3ba1f2cf3e10",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1604,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 99,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:0039e8ff-0198-4d60-8648-6e8ab8fae6a1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1703,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 117,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:a723a48e-d192-4073-9e6b-610445c8168b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1820,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 111,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:b25d0a94-8c0c-4d3e-bbed-da37f25ed07e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1931,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 81,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:40e2cd89-0d9d-4225-aa4d-274b366b5601",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2013,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 110,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:9a9068bd-a504-42bf-a573-0b1a1eeb91e9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2124,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 581,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:e9dce6f1-bc36-467c-9517-4523daf66ce8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2706,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 301,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 Bad Request: expected 500 to equal 400",
                "showDiff": true,
                "actual": "500",
                "expected": "400",
                "operator": "strictEqual",
                "stack": "AssertionError: Expected status code 400 Bad Request: expected 500 to equal 400\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:23)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:206:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:148a4885-0022-46e5-a8c6-e64a75512960",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3010,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 592,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:dfda2880-9c2e-4e4a-b8bd-193199ec423d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3602,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 609,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:1c5f74e6-562a-4b23-8bc0-df5f11f90820",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4211,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 384,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:b2b83b96-2938-47fb-853c-1bafdf8b22a0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4596,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 610,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:67aad8f6-d8e4-489d-bb37-6d974af11a7e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5207,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 702,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"apicatalog.com\"",
              "body": "async function() {\n        const issuer = matchingIssuers.get(issuerName).issuers.find(\n          issuer => issuer.tags.has('Ed25519Signature2020'));\n        validVc = await createInitialVc({issuer});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 317,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 482,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "UXpfK_qSc5koJLqYLPVRP",
          "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
          "_testId": "urn:uuid:c2b9b33c-732e-4d59-a3f8-c72170c8b1e1"
        },
        {
          "title": "Danube Tech",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:eb09645c-d7ce-4a6e-af3d-7da5dc5682a4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6279,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1341,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:d92730bb-7137-4992-a4a9-d9ff33a821c1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7621,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 159,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:266fa894-8766-4a94-8e2e-4a5752cf5f1b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7781,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 157,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:a778614b-7416-42ba-a056-36c4cb636532",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7938,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 156,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:04fe618c-48d7-4e5c-917e-c709f05bf398",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8095,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 156,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:b370d6cf-9493-4f76-87b2-8e266b15f544",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8250,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 384,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:46d82802-97f0-42d6-baf1-89971f0b1335",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8634,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 155,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:35ab8804-d928-4729-b19c-614b182e82ae",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8790,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 481,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:14ecd803-40a8-441e-9e1c-e1cf04b9e23d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9272,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 384,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:66e00f2e-3534-44b7-9bc6-1966e7099b3d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9656,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 498,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:ba78332e-18ec-4f67-adab-79b0fca14f3f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10154,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 495,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:b1867aa2-e6db-4fb0-a9b2-c376249dc821",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10649,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1237,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:66f14fa5-bda3-422b-81cb-8c477f8c4128",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11885,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 928,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:59f624bc-179e-4bd5-9632-b2791557597a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12814,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 933,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:44023abc-97da-41e9-bf0e-1bcf132fcefe",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13749,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 931,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:d2bdab19-4382-4788-82b1-090c2206b155",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14681,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 779,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:0c85d966-bb7a-4fae-98ed-65c995bf8c56",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15460,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 933,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:bb2b4a8a-ab3b-49d1-9532-d8d55cfce96d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16392,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2157,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Danube Tech\"",
              "body": "async function() {\n        const issuer = matchingIssuers.get(issuerName).issuers.find(\n          issuer => issuer.tags.has('Ed25519Signature2020'));\n        validVc = await createInitialVc({issuer});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5909,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 369,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "UXpfK_qSc5koJLqYLPVRP",
          "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
          "_testId": "urn:uuid:bc176ebd-1845-4c07-b007-c3d630908e50"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:0996315c-6712-4e95-bf83-cea10b8be58a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18906,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 124,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:eb02b49c-b91f-479e-99fb-f32d6b7a9f36",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19030,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 83,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:84ef319c-6370-4e6f-8ad6-89921f4c4454",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19113,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 79,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:5a9d0c59-1111-4fb1-8a58-c34c5a8ee3e5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19192,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 94,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:d3307d4a-7fa4-400e-a431-f03adccc333a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19289,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 79,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:eef52673-a005-4b4d-954c-e76dfba07642",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19367,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 73,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:05ffe6fe-f15f-4aee-b619-8520918ac5f6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19441,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 77,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:f3a545e3-d3a0-47ae-a5ec-e5eb90c1da71",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19518,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 95,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:1400796b-98bd-43c0-8338-a31c4889f87a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19613,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 91,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:2646ce26-b697-4e62-8f7f-6ecbddfe8392",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19704,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 92,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:bf2a11b7-7409-4e21-b7eb-79f61eff7035",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19795,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 79,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:dc1cbb1a-8c1c-46f7-90c9-69c2e5e4feba",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19874,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 440,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:cfd41bed-4dd6-463a-972f-f8393aa6c5b3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20314,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 435,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:50bef1d9-1bfd-49a1-b679-21a04058c37b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20750,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 488,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:2628399d-59fa-4547-99f0-8007524b703a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21237,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 487,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:2ea32d06-7589-4464-a9c9-5c2cac83c625",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21724,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 386,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:b05425c6-ebc0-48fe-bd42-932fb18a3309",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22110,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 496,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:b800d5a8-00df-4e23-92d2-2af51c49fb23",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22607,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 455,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        const issuer = matchingIssuers.get(issuerName).issuers.find(\n          issuer => issuer.tags.has('Ed25519Signature2020'));\n        validVc = await createInitialVc({issuer});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18550,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 356,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "UXpfK_qSc5koJLqYLPVRP",
          "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
          "_testId": "urn:uuid:7f68c0ce-9cb4-483e-b60a-7647a3118cd7"
        },
        {
          "title": "EWF",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:afa7d057-e120-47f1-853d-d39173617eb1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23189,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 320,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:65a848e6-8c88-477f-a404-b9599f65d874",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23509,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 40,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:5effc328-71b1-47c2-8bbc-041972c4d937",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23549,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 42,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:68cb6b18-f76c-4e5b-bf6e-b348d0513aca",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23591,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 43,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:739b0cc6-e8d3-4b7e-9c0c-46dab48a52d1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23634,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 42,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:9796066c-3998-4f47-875c-2dc8ab8aefef",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23676,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 40,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:df4b6865-7045-4278-9293-06c63a3e3357",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23716,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 40,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:05004f20-0c6e-47aa-ad55-771e15db4e67",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23755,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 41,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:fed79e70-df9c-4ab9-8166-2d4814c35f66",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23797,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 47,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:3082e09a-b3db-4de1-9d31-48c5f16864a4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23845,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 39,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:15f7d8fa-a344-44d8-b7c2-fffcb7edb34c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23884,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 46,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:d6a2c463-ed59-4b62-8298-6f946c824fef",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23930,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 392,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:39bb663b-81f0-427f-88ea-b371db0fffad",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24323,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 247,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:3d5f0c4b-8c1d-405b-9a1a-c611cc391d52",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24570,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 240,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:f54ac076-0fd0-4f4f-a80d-efa7e6f74a5f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24811,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 234,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:602f00a4-518c-42be-a42c-88bf89d46eb8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25045,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 201,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:e0110d66-4593-41ec-8b04-c945b0dc64f1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25246,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 294,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:914881bf-ec70-455c-a9f0-b7f01b5b0476",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25539,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 250,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"EWF\"",
              "body": "async function() {\n        const issuer = matchingIssuers.get(issuerName).issuers.find(\n          issuer => issuer.tags.has('Ed25519Signature2020'));\n        validVc = await createInitialVc({issuer});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23063,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 125,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "UXpfK_qSc5koJLqYLPVRP",
          "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
          "_testId": "urn:uuid:981e6e67-8bf2-45ee-b174-21a1f7c604d6"
        },
        {
          "title": "LearnCard",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:86cd65b1-ee66-4b50-abe6-5150c3049b0f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25911,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 413,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:71129017-9a0f-429a-9323-5efd0606302c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26324,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 104,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:09229038-1ee9-40e2-9ee0-e4dbb522571d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26428,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 107,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:6222ca06-3547-469a-be05-ea05d55ec7d0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26536,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 104,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:0d98e24c-df65-4cca-a163-598f4f7a9279",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26640,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 94,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:ca59ae6d-c817-4d3b-8a5f-d20e1a8c11cf",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26734,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 106,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:7c1aadab-3c1c-4380-90d6-2dbfc153111c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26840,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 102,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:fb989ca5-d3fe-4173-9744-1f947c1721e3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26942,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 104,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:1e13ee64-9991-45b2-bd02-510979169e1e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27045,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 119,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:245d21b5-ab87-47eb-9428-f308aabd2873",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27165,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 132,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:45ba7606-4b8a-4b81-8b75-d966590bae43",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27296,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 106,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:29df1ae0-fcc0-4378-8bba-2edd6dcd5475",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27403,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 743,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:d9fac151-0013-47ae-be32-d9470200562d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28145,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 607,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:7d25beea-1dc6-47c7-9588-074151a4930c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28752,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 572,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:a24eeb23-49c8-4ad8-a20c-7d2c35748b65",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29325,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 548,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:d5a95d3c-b9a9-4e7a-a1b8-643318280412",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29873,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 470,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:c91aab13-c1bb-4d7f-a5be-d4e88610adf7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30344,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 586,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:7561d4f1-2b4d-48b7-baef-64b5c99e6cb7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30929,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 584,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"LearnCard\"",
              "body": "async function() {\n        const issuer = matchingIssuers.get(issuerName).issuers.find(\n          issuer => issuer.tags.has('Ed25519Signature2020'));\n        validVc = await createInitialVc({issuer});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25790,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 122,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "UXpfK_qSc5koJLqYLPVRP",
          "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
          "_testId": "urn:uuid:5cd28772-dae2-4003-9eed-b0aa8a3c604b"
        },
        {
          "title": "Mavennet",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:8b33cafe-1825-4d73-8d1e-19911b9088e4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31668,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1876,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:675e0805-8f71-47d6-bf77-6024f799c6aa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33544,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 80,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:28719940-bd2d-43a6-8ee8-0f1183e4f238",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33624,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 83,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:e8fe9eba-3a46-4841-a12e-aa2eec92abcd",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33707,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 83,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:9b54847e-97ca-47f7-9b76-2066d4422a17",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33790,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 79,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:e3b4d0b7-cdaa-4d62-bee2-e749e4189c69",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33868,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 86,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:8574323a-695b-4bca-8b81-1cad6e4427fd",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33955,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 83,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:1798f75b-d228-473b-b387-98384cc05db8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34039,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 78,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:fc95c565-a48c-405f-b37a-7465e0d9f913",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34117,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 132,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response{ data: { …(3) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response{ data: { …(3) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:154:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:b49a561b-e43e-4cbb-aae8-ad3c6e92dac1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34252,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 77,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:b09015d3-926b-45c1-8412-b493e7066200",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34330,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 82,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:f85be4e5-fce4-4582-9370-6836780949fb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34413,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 484,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:64e02ef7-f9c6-4828-9589-ba4f1b745608",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34896,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 612,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:5ab9bf2b-0364-43ad-9d98-abd72ec93382",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35508,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 460,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:6b8616ce-d3b9-44fd-a0ad-ea4f93b5c83f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35969,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 473,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:915148e0-9d8c-4669-9cd9-c778f9cee7c6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36442,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 128,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response{ data: { …(3) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response{ data: { …(3) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:249:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:d6aac52e-ce50-42a6-ad06-4e998882eac0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36570,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 484,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:aa8bbaf7-0c1a-4bcc-9e87-813cd378bb2f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37053,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 465,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Mavennet\"",
              "body": "async function() {\n        const issuer = matchingIssuers.get(issuerName).issuers.find(\n          issuer => issuer.tags.has('Ed25519Signature2020'));\n        validVc = await createInitialVc({issuer});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31514,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 154,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "UXpfK_qSc5koJLqYLPVRP",
          "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
          "_testId": "urn:uuid:ec245c33-1e05-4fda-a5b9-9dce8b63a4e2"
        },
        {
          "title": "mesur.io",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:7b227c75-27ac-43b3-baac-6e9485f5e542",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37661,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 505,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:72d8f836-e3da-48ad-b90c-afcde8b39ab2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38166,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 53,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:73:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:9a5192a6-ae68-42b7-a2e3-ea1ab7150fb7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38220,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 51,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:e24f0e4d-ef9f-4329-bd99-2a97f47c3f50",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38272,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 52,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:95:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:c716bf93-b59b-4eed-909d-12882ed6ce37",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38324,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 53,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:107:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:a275a6c8-5a77-451b-adb7-3f28bd48bb63",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38378,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 53,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:a1431ed6-6cb4-4e3b-b289-b926211103d7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38431,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 51,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:7dc033ed-5fa1-4cd9-b438-d47e6327d5c1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38482,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 51,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:2af100dd-1cfc-4c53-bab3-c75ff1e691b2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38534,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 51,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:a33f562c-f5af-43b4-b662-4ff9cef4aee7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38585,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 51,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:ed7886ac-f4d9-4483-8daa-d4a646d230de",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38636,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 54,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:178:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:396c6dfa-ddcc-440e-909d-7e0daf19191d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38690,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 276,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:191:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:a56bed5a-90ef-4955-b5c0-ac33c6a81168",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38965,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 150,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:206:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:820a8acb-5b26-4eec-9d2d-f3ce6f5c702a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39116,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 294,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:62f67782-64ee-4760-8dcd-20ffe02827e2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39410,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 297,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:246f1a22-e516-4824-a71f-84fdeb28668d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39707,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 54,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:249:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:a5165092-0058-4a9d-a89a-fa14b87a1769",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39762,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 100,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:266:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:5d6b6abe-daba-4cad-9d5e-b7083de1cbc1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39862,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 295,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"mesur.io\"",
              "body": "async function() {\n        const issuer = matchingIssuers.get(issuerName).issuers.find(\n          issuer => issuer.tags.has('Ed25519Signature2020'));\n        validVc = await createInitialVc({issuer});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37519,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 143,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "UXpfK_qSc5koJLqYLPVRP",
          "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
          "_testId": "urn:uuid:bca81851-5dce-46d5-ba43-06e0ca1f1c01"
        },
        {
          "title": "SecureKey",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:54d0a303-8af7-4f19-bbe9-33fe217bcc06",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40295,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 395,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:aba1d330-f05a-4f92-8559-8a2d831fae3d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40689,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 76,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:376d6306-5d41-45ac-bcbb-75f6aa0ebbbb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40765,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 80,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:81a9fb01-f834-4043-aa10-6133fbdba84a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40845,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 88,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:6414ef0e-ace6-4d2b-9de5-4250387d6db9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40934,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 82,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:54c1e5a8-1883-46de-8752-14cddc266bdb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41016,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 87,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:1c5b74e9-f715-4ebd-a83f-d2ac360bee09",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41104,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 79,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:26947f64-b101-4d8e-881a-8d7a24caf31a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41182,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 75,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:83754a30-5a98-422d-9a69-7ca081ddd8d2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41258,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 81,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:252daf42-b0f1-4dd2-8467-afe8afd2328d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41339,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 75,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:c13cb009-bc8f-49e6-b1c1-8cb8cb32f03f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41414,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 105,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:94b39c71-a8fe-4ebd-9d4f-e3ab0b3f56e8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41519,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 755,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:ef999b95-2188-42a5-8744-423204d7e361",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 42274,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 466,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:c5bfa736-7d0d-48aa-865a-649ffdc89184",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 42740,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 486,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:7edcc48a-79d2-446a-9842-3f1cbf5f3261",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43226,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 490,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:5b63179a-df73-42fe-abc3-19e4e00eee4e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43717,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 419,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:f370a2d8-4a3c-49f4-ba37-d57af1fb6c34",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44137,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 502,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:901b8647-53cc-4410-b58f-d77191134772",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44640,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 478,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SecureKey\"",
              "body": "async function() {\n        const issuer = matchingIssuers.get(issuerName).issuers.find(\n          issuer => issuer.tags.has('Ed25519Signature2020'));\n        validVc = await createInitialVc({issuer});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40158,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 137,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "UXpfK_qSc5koJLqYLPVRP",
          "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
          "_testId": "urn:uuid:13180d9c-e1b1-48f8-939b-92e1c70068ba"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:f203c331-9889-45f7-b86a-3357878fc8e7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45253,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 346,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:54b421db-0ffd-4e55-a50f-378c688cde6e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45599,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 86,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:3ebf9a62-2814-4f5f-91c0-a604e05b9625",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45685,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 93,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:1782fa3c-52b3-4ee3-a912-1bc81a0a9aa6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45779,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 89,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:c226adf6-cd3a-45c2-91cb-0ddb86990d7e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45867,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 87,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:b7382942-894a-419a-a7b0-de37a0ddb2ca",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45954,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 86,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:ed18d2eb-50d5-4273-8e7c-02eb97d68dea",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46040,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 95,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:b13a32e1-092d-4320-a9b2-0a9be8d6a026",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46135,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 85,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:11f62c78-333f-44d1-bb2b-1350e531522c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46221,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 87,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:ea82d9d4-dbb4-4d38-aa4c-e0c271bd46f0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46309,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 91,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:d23d9d5c-a891-4306-afef-9600383d490b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46399,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 90,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:138cb88e-2579-49ca-8326-aadd79f464be",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46489,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 749,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:8715f8f3-8a19-4228-8535-95ab584d3d85",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 47238,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 764,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:bfeb1e0a-751d-4f46-b753-52cd9e82d3cc",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 48003,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 517,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:012aefcc-0036-44c2-a92c-28af8882c23e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 48520,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 516,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:d00a2c42-ec56-46b1-8bff-b1880e86ce70",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49035,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 426,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:429e5f16-a8dd-4f6d-b964-66c3dbc80504",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49462,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 530,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:93c91f7d-c36d-46b3-a44b-4f9f7783724a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49993,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 515,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        const issuer = matchingIssuers.get(issuerName).issuers.find(\n          issuer => issuer.tags.has('Ed25519Signature2020'));\n        validVc = await createInitialVc({issuer});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45118,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 135,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "UXpfK_qSc5koJLqYLPVRP",
          "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
          "_testId": "urn:uuid:e2f3ae73-6861-4950-8064-f43cd31d6f68"
        },
        {
          "title": "Trinsic",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:a0ef9dc0-ed61-4fce-a085-1b8062d30b9d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 50895,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 732,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:cea4a4c5-f482-4ae7-b32a-ec577ba84634",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51627,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 122,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:66df39ad-771d-40b8-9ce5-1af24e9118e7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51749,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 118,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:5ec2efdf-ed8c-4188-9dbd-2c5b2ff70b76",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51867,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 102,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:e92608a4-ebbc-4baa-8023-b1e6055f83d7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51969,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 109,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:4a3ae343-9f78-4fcb-8a9d-31ed3f023ae9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52078,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 81,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:7b9ca22d-5d21-4e34-aea1-4a84e529c425",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52160,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 232,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:bc80e4cb-451c-4a1c-ab24-d06e83415f51",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52393,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 84,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:f355d419-a7c2-4a63-9230-3206d96c248d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52477,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 83,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:f11e379f-dc74-41da-959d-159db2896c84",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52560,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 95,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:bd9976f7-4bba-40ef-984a-a0a9b2758f37",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52654,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 81,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:a9d62777-54a6-4105-b214-2bd99f5757c7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52736,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 801,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:a8dad0d1-fe08-4ee9-9385-76c2cc163ef3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53537,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 608,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:c7e1d63c-3047-40e2-95b1-85e985761a9a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54146,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 715,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:eaee9594-1c4a-4678-9b53-523d40826afa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54862,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 722,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:87eb90e0-5f65-43d6-97bd-8a70dbd191ec",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 55585,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 532,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:c897049f-ab04-4cc1-9610-4b84d836bcf8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56118,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 895,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:b7484108-65b9-4db2-ad3d-6e3600c89b47",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57013,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 645,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trinsic\"",
              "body": "async function() {\n        const issuer = matchingIssuers.get(issuerName).issuers.find(\n          issuer => issuer.tags.has('Ed25519Signature2020'));\n        validVc = await createInitialVc({issuer});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 50508,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 387,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "UXpfK_qSc5koJLqYLPVRP",
          "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
          "_testId": "urn:uuid:79d7c9aa-838e-4fb0-b487-3cc242e30490"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "9gvVqIbkKaBQq0w22MOdj",
      "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
      "summary": {},
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Verifier",
      "reportData": [],
      "_testId": "urn:uuid:14249d38-c579-4b3e-806c-42b264834568",
      "columns": [
        "apicatalog.com",
        "Danube Tech",
        "Digital Bazaar",
        "EWF",
        "LearnCard",
        "Mavennet",
        "mesur.io",
        "SecureKey",
        "SpruceID",
        "Trinsic"
      ],
      "rows": [
        {
          "id": "MUST verify a valid VC.",
          "cells": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:132888fc-eb85-45f0-a290-fd4e68399496",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 798,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 321,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:eb09645c-d7ce-4a6e-af3d-7da5dc5682a4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6279,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1341,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:0996315c-6712-4e95-bf83-cea10b8be58a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18906,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 124,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:afa7d057-e120-47f1-853d-d39173617eb1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23189,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 320,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:86cd65b1-ee66-4b50-abe6-5150c3049b0f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25911,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 413,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:8b33cafe-1825-4d73-8d1e-19911b9088e4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31668,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1876,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:7b227c75-27ac-43b3-baac-6e9485f5e542",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37661,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 505,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:54d0a303-8af7-4f19-bbe9-33fe217bcc06",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40295,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 395,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:f203c331-9889-45f7-b86a-3357878fc8e7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45253,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 346,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:a0ef9dc0-ed61-4fce-a085-1b8062d30b9d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 50895,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 732,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"@context\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:dcf35d85-bd72-4b3e-b0fe-45299d416508",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1120,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 87,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:d92730bb-7137-4992-a4a9-d9ff33a821c1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7621,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 159,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:eb02b49c-b91f-479e-99fb-f32d6b7a9f36",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19030,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 83,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:65a848e6-8c88-477f-a404-b9599f65d874",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23509,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 40,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:71129017-9a0f-429a-9323-5efd0606302c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26324,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 104,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:675e0805-8f71-47d6-bf77-6024f799c6aa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33544,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 80,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:72d8f836-e3da-48ad-b90c-afcde8b39ab2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38166,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 53,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:73:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:aba1d330-f05a-4f92-8559-8a2d831fae3d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40689,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 76,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:54b421db-0ffd-4e55-a50f-378c688cde6e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45599,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 86,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:cea4a4c5-f482-4ae7-b32a-ec577ba84634",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51627,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 122,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"type\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:375be79d-b0da-4bd3-be44-9fb42963a1bd",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1207,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 71,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:266fa894-8766-4a94-8e2e-4a5752cf5f1b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7781,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 157,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:84ef319c-6370-4e6f-8ad6-89921f4c4454",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19113,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 79,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:5effc328-71b1-47c2-8bbc-041972c4d937",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23549,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 42,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:09229038-1ee9-40e2-9ee0-e4dbb522571d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26428,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 107,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:28719940-bd2d-43a6-8ee8-0f1183e4f238",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33624,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 83,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:9a5192a6-ae68-42b7-a2e3-ea1ab7150fb7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38220,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 51,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:376d6306-5d41-45ac-bcbb-75f6aa0ebbbb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40765,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 80,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:3ebf9a62-2814-4f5f-91c0-a604e05b9625",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45685,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 93,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:66df39ad-771d-40b8-9ce5-1af24e9118e7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51749,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 118,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"issuer\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:99ddee19-7a5c-4c85-b2a3-44d7114bc287",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1278,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 76,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:a778614b-7416-42ba-a056-36c4cb636532",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7938,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 156,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:5a9d0c59-1111-4fb1-8a58-c34c5a8ee3e5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19192,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 94,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:68cb6b18-f76c-4e5b-bf6e-b348d0513aca",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23591,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 43,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:6222ca06-3547-469a-be05-ea05d55ec7d0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26536,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 104,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:e8fe9eba-3a46-4841-a12e-aa2eec92abcd",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33707,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 83,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:e24f0e4d-ef9f-4329-bd99-2a97f47c3f50",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38272,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 52,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:95:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:81a9fb01-f834-4043-aa10-6133fbdba84a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40845,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 88,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:1782fa3c-52b3-4ee3-a912-1bc81a0a9aa6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45779,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 89,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:5ec2efdf-ed8c-4188-9dbd-2c5b2ff70b76",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51867,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 102,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"credentialSubject\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:c2b5aacd-fd06-493a-8f45-74f463d0192d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1355,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 155,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:04fe618c-48d7-4e5c-917e-c709f05bf398",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8095,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 156,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:d3307d4a-7fa4-400e-a431-f03adccc333a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19289,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 79,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:739b0cc6-e8d3-4b7e-9c0c-46dab48a52d1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23634,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 42,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:0d98e24c-df65-4cca-a163-598f4f7a9279",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26640,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 94,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:9b54847e-97ca-47f7-9b76-2066d4422a17",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33790,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 79,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:c716bf93-b59b-4eed-909d-12882ed6ce37",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38324,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 53,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:107:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:6414ef0e-ace6-4d2b-9de5-4250387d6db9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40934,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 82,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:c226adf6-cd3a-45c2-91cb-0ddb86990d7e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45867,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 87,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:e92608a4-ebbc-4baa-8023-b1e6055f83d7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51969,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 109,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:db62594a-0fed-4eba-aecc-b60e0895a047",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1510,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 93,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:b370d6cf-9493-4f76-87b2-8e266b15f544",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8250,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 384,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:eef52673-a005-4b4d-954c-e76dfba07642",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19367,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 73,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:9796066c-3998-4f47-875c-2dc8ab8aefef",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23676,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 40,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:ca59ae6d-c817-4d3b-8a5f-d20e1a8c11cf",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26734,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 106,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:e3b4d0b7-cdaa-4d62-bee2-e749e4189c69",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33868,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 86,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:a275a6c8-5a77-451b-adb7-3f28bd48bb63",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38378,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 53,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:54c1e5a8-1883-46de-8752-14cddc266bdb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41016,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 87,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:b7382942-894a-419a-a7b0-de37a0ddb2ca",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45954,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 86,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:4a3ae343-9f78-4fcb-8a9d-31ed3f023ae9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52078,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 81,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.type\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:d9316bbe-8f10-46a8-b4b7-3ba1f2cf3e10",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1604,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 99,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:46d82802-97f0-42d6-baf1-89971f0b1335",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8634,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 155,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:05ffe6fe-f15f-4aee-b619-8520918ac5f6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19441,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 77,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:df4b6865-7045-4278-9293-06c63a3e3357",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23716,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 40,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:7c1aadab-3c1c-4380-90d6-2dbfc153111c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26840,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 102,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:8574323a-695b-4bca-8b81-1cad6e4427fd",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33955,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 83,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:a1431ed6-6cb4-4e3b-b289-b926211103d7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38431,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 51,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:1c5b74e9-f715-4ebd-a83f-d2ac360bee09",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41104,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 79,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:ed18d2eb-50d5-4273-8e7c-02eb97d68dea",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46040,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 95,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:7b9ca22d-5d21-4e34-aea1-4a84e529c425",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52160,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 232,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.created\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:0039e8ff-0198-4d60-8648-6e8ab8fae6a1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1703,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 117,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:35ab8804-d928-4729-b19c-614b182e82ae",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8790,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 481,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:f3a545e3-d3a0-47ae-a5ec-e5eb90c1da71",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19518,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 95,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:05004f20-0c6e-47aa-ad55-771e15db4e67",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23755,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 41,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:fb989ca5-d3fe-4173-9744-1f947c1721e3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26942,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 104,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:1798f75b-d228-473b-b387-98384cc05db8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34039,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 78,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:7dc033ed-5fa1-4cd9-b438-d47e6327d5c1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38482,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 51,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:26947f64-b101-4d8e-881a-8d7a24caf31a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41182,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 75,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:b13a32e1-092d-4320-a9b2-0a9be8d6a026",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46135,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 85,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:bc80e4cb-451c-4a1c-ab24-d06e83415f51",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52393,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 84,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.verificationMethod\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:a723a48e-d192-4073-9e6b-610445c8168b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1820,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 111,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:14ecd803-40a8-441e-9e1c-e1cf04b9e23d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9272,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 384,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:1400796b-98bd-43c0-8338-a31c4889f87a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19613,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 91,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:fed79e70-df9c-4ab9-8166-2d4814c35f66",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23797,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 47,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:1e13ee64-9991-45b2-bd02-510979169e1e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27045,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 119,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:fc95c565-a48c-405f-b37a-7465e0d9f913",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34117,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 132,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response{ data: { …(3) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response{ data: { …(3) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:154:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:2af100dd-1cfc-4c53-bab3-c75ff1e691b2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38534,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 51,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:83754a30-5a98-422d-9a69-7ca081ddd8d2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41258,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 81,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:11f62c78-333f-44d1-bb2b-1350e531522c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46221,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 87,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:f355d419-a7c2-4a63-9230-3206d96c248d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52477,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 83,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.proofValue\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:b25d0a94-8c0c-4d3e-bbed-da37f25ed07e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1931,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 81,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:66e00f2e-3534-44b7-9bc6-1966e7099b3d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9656,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 498,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:2646ce26-b697-4e62-8f7f-6ecbddfe8392",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19704,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 92,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:3082e09a-b3db-4de1-9d31-48c5f16864a4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23845,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 39,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:245d21b5-ab87-47eb-9428-f308aabd2873",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27165,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 132,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:b49a561b-e43e-4cbb-aae8-ad3c6e92dac1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34252,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 77,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:a33f562c-f5af-43b4-b662-4ff9cef4aee7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38585,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 51,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:252daf42-b0f1-4dd2-8467-afe8afd2328d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41339,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 75,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:ea82d9d4-dbb4-4d38-aa4c-e0c271bd46f0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46309,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 91,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:f11e379f-dc74-41da-959d-159db2896c84",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52560,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 95,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.proofPurpose\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:40e2cd89-0d9d-4225-aa4d-274b366b5601",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2013,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 110,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:ba78332e-18ec-4f67-adab-79b0fca14f3f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10154,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 495,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:bf2a11b7-7409-4e21-b7eb-79f61eff7035",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19795,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 79,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:15f7d8fa-a344-44d8-b7c2-fffcb7edb34c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23884,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 46,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:45ba7606-4b8a-4b81-8b75-d966590bae43",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27296,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 106,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:b09015d3-926b-45c1-8412-b493e7066200",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34330,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 82,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:ed7886ac-f4d9-4483-8daa-d4a646d230de",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38636,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 54,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:178:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:c13cb009-bc8f-49e6-b1c1-8cb8cb32f03f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41414,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 105,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:d23d9d5c-a891-4306-afef-9600383d490b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46399,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 90,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:bd9976f7-4bba-40ef-984a-a0a9b2758f37",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52654,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 81,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"@context\" is not an array.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:9a9068bd-a504-42bf-a573-0b1a1eeb91e9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2124,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 581,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:b1867aa2-e6db-4fb0-a9b2-c376249dc821",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10649,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1237,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:dc1cbb1a-8c1c-46f7-90c9-69c2e5e4feba",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19874,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 440,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:d6a2c463-ed59-4b62-8298-6f946c824fef",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23930,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 392,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:29df1ae0-fcc0-4378-8bba-2edd6dcd5475",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27403,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 743,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:f85be4e5-fce4-4582-9370-6836780949fb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34413,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 484,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:396c6dfa-ddcc-440e-909d-7e0daf19191d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38690,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 276,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:191:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:94b39c71-a8fe-4ebd-9d4f-e3ab0b3f56e8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41519,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 755,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:138cb88e-2579-49ca-8326-aadd79f464be",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46489,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 749,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:a9d62777-54a6-4105-b214-2bd99f5757c7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52736,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 801,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"@context\" items are not strings.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:e9dce6f1-bc36-467c-9517-4523daf66ce8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2706,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 301,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 Bad Request: expected 500 to equal 400",
                "showDiff": true,
                "actual": "500",
                "expected": "400",
                "operator": "strictEqual",
                "stack": "AssertionError: Expected status code 400 Bad Request: expected 500 to equal 400\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:23)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:206:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:66f14fa5-bda3-422b-81cb-8c477f8c4128",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11885,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 928,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:cfd41bed-4dd6-463a-972f-f8393aa6c5b3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20314,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 435,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:39bb663b-81f0-427f-88ea-b371db0fffad",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24323,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 247,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:d9fac151-0013-47ae-be32-d9470200562d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28145,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 607,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:64e02ef7-f9c6-4828-9589-ba4f1b745608",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34896,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 612,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:a56bed5a-90ef-4955-b5c0-ac33c6a81168",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38965,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 150,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:206:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:ef999b95-2188-42a5-8744-423204d7e361",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 42274,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 466,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:8715f8f3-8a19-4228-8535-95ab584d3d85",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 47238,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 764,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:a8dad0d1-fe08-4ee9-9385-76c2cc163ef3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53537,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 608,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"type\" is not an array.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:148a4885-0022-46e5-a8c6-e64a75512960",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3010,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 592,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:59f624bc-179e-4bd5-9632-b2791557597a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 12814,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 933,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:50bef1d9-1bfd-49a1-b679-21a04058c37b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20750,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 488,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:3d5f0c4b-8c1d-405b-9a1a-c611cc391d52",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24570,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 240,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:7d25beea-1dc6-47c7-9588-074151a4930c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28752,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 572,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:5ab9bf2b-0364-43ad-9d98-abd72ec93382",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35508,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 460,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:820a8acb-5b26-4eec-9d2d-f3ce6f5c702a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39116,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 294,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:c5bfa736-7d0d-48aa-865a-649ffdc89184",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 42740,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 486,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:bfeb1e0a-751d-4f46-b753-52cd9e82d3cc",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 48003,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 517,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:c7e1d63c-3047-40e2-95b1-85e985761a9a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54146,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 715,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"type\" items are not strings.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:dfda2880-9c2e-4e4a-b8bd-193199ec423d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3602,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 609,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:44023abc-97da-41e9-bf0e-1bcf132fcefe",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13749,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 931,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:2628399d-59fa-4547-99f0-8007524b703a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21237,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 487,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:f54ac076-0fd0-4f4f-a80d-efa7e6f74a5f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24811,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 234,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:a24eeb23-49c8-4ad8-a20c-7d2c35748b65",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29325,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 548,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:6b8616ce-d3b9-44fd-a0ad-ea4f93b5c83f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35969,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 473,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:62f67782-64ee-4760-8dcd-20ffe02827e2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39410,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 297,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:7edcc48a-79d2-446a-9842-3f1cbf5f3261",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43226,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 490,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:012aefcc-0036-44c2-a92c-28af8882c23e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 48520,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 516,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:eaee9594-1c4a-4678-9b53-523d40826afa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54862,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 722,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"issuer\" is not an object or a string.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:1c5f74e6-562a-4b23-8bc0-df5f11f90820",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4211,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 384,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:d2bdab19-4382-4788-82b1-090c2206b155",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14681,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 779,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:2ea32d06-7589-4464-a9c9-5c2cac83c625",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21724,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 386,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:602f00a4-518c-42be-a42c-88bf89d46eb8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25045,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 201,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:d5a95d3c-b9a9-4e7a-a1b8-643318280412",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29873,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 470,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:915148e0-9d8c-4669-9cd9-c778f9cee7c6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36442,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 128,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response{ data: { …(3) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response{ data: { …(3) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:249:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:246f1a22-e516-4824-a71f-84fdeb28668d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39707,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 54,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:249:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:5b63179a-df73-42fe-abc3-19e4e00eee4e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43717,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 419,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:d00a2c42-ec56-46b1-8bff-b1880e86ce70",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49035,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 426,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:87eb90e0-5f65-43d6-97bd-8a70dbd191ec",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 55585,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 532,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"credentialSubject\" is not an object.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:b2b83b96-2938-47fb-853c-1bafdf8b22a0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4596,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 610,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:0c85d966-bb7a-4fae-98ed-65c995bf8c56",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15460,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 933,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:b05425c6-ebc0-48fe-bd42-932fb18a3309",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22110,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 496,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:e0110d66-4593-41ec-8b04-c945b0dc64f1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25246,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 294,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:c91aab13-c1bb-4d7f-a5be-d4e88610adf7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30344,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 586,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:d6aac52e-ce50-42a6-ad06-4e998882eac0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36570,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 484,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:a5165092-0058-4a9d-a89a-fa14b87a1769",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39762,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 100,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response{ data: { …(2) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:266:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:f370a2d8-4a3c-49f4-ba37-d57af1fb6c34",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44137,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 502,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:429e5f16-a8dd-4f6d-b964-66c3dbc80504",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49462,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 530,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:c897049f-ab04-4cc1-9610-4b84d836bcf8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56118,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 895,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof\" is not an object.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "AwyShyXxb2oZ6lP8kD5Yw",
              "ctx": null,
              "_testId": "urn:uuid:67aad8f6-d8e4-489d-bb37-6d974af11a7e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5207,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 702,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jAuQx8mKYHFcL-QwNdjvN",
              "ctx": null,
              "_testId": "urn:uuid:bb2b4a8a-ab3b-49d1-9532-d8d55cfce96d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16392,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 2157,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "IWdEM-9yzyZ8K7FSCVSKM",
              "ctx": null,
              "_testId": "urn:uuid:b800d5a8-00df-4e23-92d2-2af51c49fb23",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22607,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 455,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "zK9PiOFQ0StXEbBOIHZXf",
              "ctx": null,
              "_testId": "urn:uuid:914881bf-ec70-455c-a9f0-b7f01b5b0476",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25539,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 250,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "jYzouu45JLDCVJ_sZCUQt",
              "ctx": null,
              "_testId": "urn:uuid:7561d4f1-2b4d-48b7-baef-64b5c99e6cb7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30929,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 584,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "USGAtCVRKyNnov8Xc5zHE",
              "ctx": null,
              "_testId": "urn:uuid:aa8bbaf7-0c1a-4bcc-9e87-813cd378bb2f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37053,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 465,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "FNnBClhehEQXbZ-o8K-2-",
              "ctx": null,
              "_testId": "urn:uuid:5d6b6abe-daba-4cad-9d5e-b7083de1cbc1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "mesur.io",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39862,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 295,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "w7EHDyaCrdo6J-uU6kNv6",
              "ctx": null,
              "_testId": "urn:uuid:901b8647-53cc-4410-b58f-d77191134772",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44640,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 478,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "D1qpzZc-Mm4ASDoG7NHMQ",
              "ctx": null,
              "_testId": "urn:uuid:93c91f7d-c36d-46b3-a44b-4f9f7783724a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49993,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 515,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "RfTfn-TMGcoNuxdMTNpJO",
              "ctx": null,
              "_testId": "urn:uuid:b7484108-65b9-4db2-ad3d-6e3600c89b47",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57013,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 645,
              "state": "passed",
              "speed": "slow"
            }
          ]
        }
      ]
    },
    {
      "title": "Verify Credential - JWT",
      "ctx": null,
      "suites": [
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:337c8fd2-22ce-4f49-a2e6-8b6493bcb258",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 58011,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 290,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:604cbaf6-5395-4c4c-babc-25e5ddaea9ba",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 58302,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 93,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:3c09df13-91ca-4084-9b07-89517ac0afb3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 58394,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 94,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:3e0c95d9-63e3-4741-beef-0cf1e0b8eef4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 58489,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 101,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:2591d15c-6b57-4c26-8436-317512a31328",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 58590,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 92,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:1eff3f4e-f9a2-432d-a7cf-a5bf9cc9f685",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 58683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 96,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:66bd4643-1df8-4cd6-8d45-d48e8e125796",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 58780,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 91,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:795405a7-170a-49a9-9e92-f529d3385f22",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 58871,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 93,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:ae7369dd-11c7-4d04-ba9f-41592af4a7db",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 58963,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 93,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:21cc129d-ae81-446f-8145-1524401ab8b5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 59057,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 100,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response{ data: { …(3) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response{ data: { …(3) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js:165:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:8716cd2f-d86f-4828-a6f7-6bf5080b37fb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 59157,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 102,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:a9c123ac-c9a1-4926-856b-11d417c31488",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 59258,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 760,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:67ad347c-9dca-4dfa-b9e6-6e4cf5845ff6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 60019,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 540,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:e481d31b-8bbc-426c-85ca-a1094f4757fa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 60559,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 732,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:b28348b9-3fe1-49b4-ba5d-0f9e2095f2ba",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 61290,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 543,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:f82c1f54-d01b-4cdf-a2ae-2ba7dd99f50a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 61834,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 446,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:c04557c4-aef7-4ad7-bcde-0a8a65c61ace",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 62281,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 537,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:f692d592-a55e-4826-917d-10a6f60acf0e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 62818,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 532,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        const issuer = matchingIssuers.get(issuerNameJWT).issuers.find(\n          issuer => issuer.tags.has('JWT'));\n        validVc = await createInitialVc({issuer});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57659,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 353,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "VOZb7caETGcgDtqDJ7pwW",
          "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
          "_testId": "urn:uuid:9f484d02-89b9-46ca-b8ba-c3fd1fa46a74"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "9gvVqIbkKaBQq0w22MOdj",
      "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
      "summary": {},
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Verifier",
      "reportData": [],
      "_testId": "urn:uuid:2463e2ad-0d90-407a-bc7e-a6c49fb3dced",
      "columns": [
        "SpruceID"
      ],
      "rows": [
        {
          "id": "MUST verify a valid VC.",
          "cells": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:337c8fd2-22ce-4f49-a2e6-8b6493bcb258",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 58011,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 290,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"@context\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:604cbaf6-5395-4c4c-babc-25e5ddaea9ba",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 58302,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 93,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"type\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:3c09df13-91ca-4084-9b07-89517ac0afb3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 58394,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 94,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"issuer\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:3e0c95d9-63e3-4741-beef-0cf1e0b8eef4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 58489,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 101,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"credentialSubject\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:2591d15c-6b57-4c26-8436-317512a31328",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 58590,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 92,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:1eff3f4e-f9a2-432d-a7cf-a5bf9cc9f685",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 58683,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 96,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.type\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:66bd4643-1df8-4cd6-8d45-d48e8e125796",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 58780,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 91,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.created\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:795405a7-170a-49a9-9e92-f529d3385f22",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 58871,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 93,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.verificationMethod\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:ae7369dd-11c7-4d04-ba9f-41592af4a7db",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 58963,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 93,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.proofValue\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:21cc129d-ae81-446f-8145-1524401ab8b5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 59057,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 100,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response{ data: { …(3) }, …(3) } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response{ data: { …(3) }, …(3) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js:165:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.proofPurpose\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:8716cd2f-d86f-4828-a6f7-6bf5080b37fb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 59157,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 102,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"@context\" is not an array.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:a9c123ac-c9a1-4926-856b-11d417c31488",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 59258,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 760,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"@context\" items are not strings.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:67ad347c-9dca-4dfa-b9e6-6e4cf5845ff6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 60019,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 540,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"type\" is not an array.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:e481d31b-8bbc-426c-85ca-a1094f4757fa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 60559,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 732,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"type\" items are not strings.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:b28348b9-3fe1-49b4-ba5d-0f9e2095f2ba",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 61290,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 543,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"issuer\" is not an object or a string.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:f82c1f54-d01b-4cdf-a2ae-2ba7dd99f50a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 61834,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 446,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"credentialSubject\" is not an object.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:c04557c4-aef7-4ad7-bcde-0a8a65c61ace",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 62281,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 537,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof\" is not an object.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "n6YpQOjgaIGxm9QS_t6d9",
              "ctx": null,
              "_testId": "urn:uuid:f692d592-a55e-4826-917d-10a6f60acf0e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 62818,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 532,
              "state": "passed",
              "speed": "slow"
            }
          ]
        }
      ]
    },
    {
      "title": "Verify Presentation - Data Integrity",
      "ctx": null,
      "suites": [],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "9gvVqIbkKaBQq0w22MOdj",
      "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/12-vp-di.js",
      "summary": {},
      "matrix": true,
      "report": true,
      "columns": [],
      "rows": []
    },
    {
      "title": "Verify Presentation - JWT",
      "ctx": null,
      "suites": [],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "9gvVqIbkKaBQq0w22MOdj",
      "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/13-vp-jwt.js",
      "summary": {},
      "matrix": true,
      "report": true,
      "columns": [],
      "rows": []
    }
  ],
  "tables": [],
  "summary": [],
  "respecConfig": {
    "specStatus": "unofficial",
    "shortName": "vc-api-verifier-test-suite",
    "subtitle": "Test Interoperability Report for Verifiable Credentials API Verifier",
    "github": "https://github.com/w3c-ccg/vc-api-verifier-test-suite",
    "edDraftURI": "https://w3c-ccg.github.io/vc-api/#verify-credential",
    "doJsonLd": true,
    "includePermalinks": false,
    "editors": [
      {
        "name": "Tashi D. Gyeltshen",
        "url": "https://github.com/JSAssassin",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      }
    ],
    "authors": [
      {
        "name": "Tashi D. Gyeltshen",
        "url": "https://github.com/JSAssassin",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      },
      {
        "name": "Manu Sporny",
        "url": "http://manu.sporny.org/",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      }
    ]
  },
  "title": "VC API Verifier Interoperability Report 1.0",
  "stats": [
    "Tests passed 186/198 93%",
    "Tests failed 12/198 7%",
    "Failures 12",
    "Tests skipped 0",
    "Total tests 198"
  ]
}