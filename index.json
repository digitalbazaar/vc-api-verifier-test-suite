{
  "matrices": [
    {
      "title": "Verify Credential - Data Integrity",
      "ctx": null,
      "suites": [
        {
          "title": "ACA-py",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:2c6b1101-22c3-4710-b706-cf7880a7127f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 764,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 358,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected HTTPError: Request failed with status cod… { …(5) } to not exist",
                "showDiff": false,
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/2018/credentials/v1\",\"https://w3id.org/security/suites/ed25519-2020/v1\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:d24d4c20-675c-4193-9d19-1b731b059a95\",\"issuer\":\"did:key:z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC\",\"issuanceDate\":\"2024-11-10T05:10:09Z\",\"proof\":{\"type\":\"Ed25519Signature2020\",\"created\":\"2024-11-10T05:10:09Z\",\"verificationMethod\":\"did:key:z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC#z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z5FPS9pjectF5vGpkkjTJcbjLx8wkdsoRyQe4pypFSHb29uZi2a1UNQN1LVZcxpwE6v1Y9J43STbWFhcaCAz5FHz9\"}},\"options\":{\"checks\":[\"proof\"]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/2018/credentials/v1",
                          "https://w3id.org/security/suites/ed25519-2020/v1"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:d24d4c20-675c-4193-9d19-1b731b059a95",
                        "issuer": "did:key:z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC",
                        "issuanceDate": "2024-11-10T05:10:09Z",
                        "proof": {
                          "type": "Ed25519Signature2020",
                          "created": "2024-11-10T05:10:09Z",
                          "verificationMethod": "did:key:z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC#z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z5FPS9pjectF5vGpkkjTJcbjLx8wkdsoRyQe4pypFSHb29uZi2a1UNQN1LVZcxpwE6v1Y9J43STbWFhcaCAz5FHz9"
                        }
                      },
                      "options": {
                        "checks": [
                          "proof"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://aca-py.test-suite.app/vc/credentials/verify",
                  "status": 500
                },
                "operator": "notStrictEqual",
                "stack": "AssertionError: expected HTTPError: Request failed with status cod… { …(5) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:58:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:0ddd9d7c-5383-4521-9343-a37b501bea63",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1126,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 79,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:077ebc3f-852d-4e72-842c-beccf4cbba21",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1204,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 81,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:4e68b578-1137-4ad7-94f1-d04bf5b6022b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1285,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 91,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:95:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:654d4ca1-40b8-4a17-9204-81d5aeb5ea94",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1377,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 85,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:107:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:30d618eb-cbd4-44d1-b805-d316311c01b1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1463,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 117,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:118:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:04666749-d41c-45c0-8bfb-808d5bdd4fe9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1581,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 79,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:130:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:4807d7db-c9d2-489c-b2a8-e1ce62139d3c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1661,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 105,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:142:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:a9853871-16b8-401f-a190-4929c600aa46",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1768,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 86,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:154:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:d4fd70ed-23e8-469d-8a62-d557f405c83e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1855,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 96,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:166:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:fdeff785-2ced-480d-8319-09581ac1c130",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1952,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 85,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:178:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:db61926f-0dc1-42d0-84b1-74941c304c7e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2037,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 693,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:44d81f40-c3db-46c6-b343-b2d927c7db98",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2730,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 156,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:206:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:e9d0894c-3dbd-4a19-9389-231bd4a6d7f0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 462,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:07abe714-e780-43cf-bde0-6c50368d1b8c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3348,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 464,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:0c05966c-2c0d-4c5b-a2e7-51039228a26c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3812,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 80,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:249:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:20a8f108-0dc1-4903-ad66-d8ad1fe75c7d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3893,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 80,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:266:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:251c73dd-a569-4d4a-b5ad-0b6e0a0263c0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3974,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 82,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:280:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"ACA-py\"",
              "body": "async function() {\n        const issuer = matchingIssuers.get(issuerName).issuers.find(\n          issuer => issuer.tags.has('vc-api'));\n        validVc = await createInitialVc({issuer});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 296,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 468,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "JoEgTT8T-tCMmd3JJUd1V",
          "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
          "_testId": "urn:uuid:70a6b454-1ff7-4a8f-9fb7-2aa2b365733b"
        },
        {
          "title": "apicatalog.com",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:865abf35-064b-4b9a-9a46-7c5b7452d4eb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4210,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 314,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:42c5beb3-fa69-4cdb-a2a2-8f77c436dd7d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4524,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 72,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:3614a048-4289-4acc-ae37-1ced72b60ca4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4596,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 70,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:e1758906-d928-4d15-9f05-bea2579db003",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4667,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 73,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:1808c282-4af9-4f31-8c0b-017fcfd26243",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4741,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 69,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:a79e8205-1b88-48d1-8dd3-52056bc23d38",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4810,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:0082683d-d8f5-4296-82b5-abbdb0aca081",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4878,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 69,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:96854b8c-7f1b-4ae0-9d2e-063b1ca7eb0c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4947,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 73,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:d109f665-f356-4daa-839f-4c9651770b1b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5020,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:1118b272-27fe-48fb-a591-858c85e66a16",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5089,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 70,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:475ef424-834e-4373-87b6-e14795963632",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5158,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 72,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:be909b62-7488-4cab-9530-81533104eff2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5231,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 469,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:d4398a25-3231-4fac-9d26-bbdbeb25d410",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5700,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 417,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:8ac9196b-4e52-476f-aa2d-f2157907084c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6116,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 420,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:3b30da2d-b016-4978-bb66-cb7754bde23c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6537,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 417,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:a4b38482-2cba-47a6-b977-cc68e2052711",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6954,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 354,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:baae079a-feb9-488b-a7a6-98c3729df0df",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7308,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 423,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:eec16244-da3e-4ab8-9efb-35a8c31b8de6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7731,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 417,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"apicatalog.com\"",
              "body": "async function() {\n        const issuer = matchingIssuers.get(issuerName).issuers.find(\n          issuer => issuer.tags.has('vc-api'));\n        validVc = await createInitialVc({issuer});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4056,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 154,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "JoEgTT8T-tCMmd3JJUd1V",
          "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
          "_testId": "urn:uuid:8f5ad89c-e90a-4cfa-9e05-482594095ddc"
        },
        {
          "title": "Danube Tech",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:07b96530-c747-477b-826c-73479c43e296",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8286,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1163,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:d5b0514b-9d32-43fc-9eed-a3b76df9b3ad",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9449,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 160,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:335a2e1a-a6a4-40eb-a1dd-7165673bd763",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9610,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 160,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:7ce0c5da-0ec2-4857-8344-9abd2db6640f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9769,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 163,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:8b374d49-682a-4f67-8a37-4b5e852c61d7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9932,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 159,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:d3cd8b49-5eaf-4a04-bf5b-ed5ccc1d7588",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10092,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 160,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:1104f897-8194-4735-abb1-01b307d62cc7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10253,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 163,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:28d40fd1-4ace-440b-ac8a-fdb31a34b8e9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10416,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 293,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:1b4d8fb1-e877-4a61-89d9-41f1893dba20",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10709,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 162,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:31223f8f-4377-4cc5-9cae-580255d1f6c0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10871,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 296,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:354b6d28-0e86-49d8-96bd-cd11f035a2bb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11168,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 292,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:2f860bba-6009-4cec-98d4-9b575bf94170",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11461,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1559,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:29b8a0e6-923d-401b-9d91-4bbb3c3b150d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13019,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 942,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:3f70f945-5aee-42f4-8f35-9e12d6d91e5a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13961,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 950,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:e5d2fe60-fc75-4be5-8b78-2146a1e2d0a9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14912,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 949,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:bc8c561c-2611-45df-adbd-f1fc08249d7f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15861,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 803,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:05fb1f8c-2cfd-4f83-a6f5-2c4bde268ed0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16664,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 952,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:be7b21a1-9041-4faa-94e4-38389ee65a4b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17616,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 955,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Danube Tech\"",
              "body": "async function() {\n        const issuer = matchingIssuers.get(issuerName).issuers.find(\n          issuer => issuer.tags.has('vc-api'));\n        validVc = await createInitialVc({issuer});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8149,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 137,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "JoEgTT8T-tCMmd3JJUd1V",
          "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
          "_testId": "urn:uuid:c73570ac-ba7c-4043-9185-10bb1a5d9b01"
        },
        {
          "title": "Digital Bazaar",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:db284d58-ccde-40cd-a3a6-7dd17f0b43a5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18944,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 861,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:92c5d18d-640a-4c79-b13f-a6c60dcba0e3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19806,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 108,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:203921dc-fe23-46c2-85a5-df2a7e082a51",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19913,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 100,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:1e670b76-7384-4390-9446-4619ad0c8f56",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20015,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 94,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:2d77be1b-33a2-4782-a9eb-c2d20e46e332",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20108,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 95,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:f130f258-7016-4a01-acc2-9bcfd89c6795",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20203,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 106,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:503553a4-8b28-40b9-a7b6-ece11bc0c048",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20309,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 98,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:1543e7a0-3264-4c16-836b-4af5001d85db",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20407,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 820,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:d219d7ca-88ca-4722-a0ca-2ac75dc47998",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21227,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 110,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:5a391e4c-4d3f-41ec-acc3-741d8ac980c1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21337,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 105,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:07fbc139-95d9-4efc-be17-9373fe3b2030",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21442,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 97,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:791ce674-931e-436b-9a09-65ba0e7e118a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21540,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 541,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:adaa6417-4530-4fe5-96d2-4a23b70e42c6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22081,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 538,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:4d66ceea-0912-4a2a-984d-29a02284e9fe",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22619,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 532,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:fa7e69d7-adcd-4b0e-a6ae-72c8cde392d6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23151,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 543,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:fb179816-d882-4c01-b5b6-39b6ceb55de0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23694,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 461,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:b1aec731-9638-403c-9631-2d4480275e41",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24156,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 535,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:6e6d3f7e-faed-4ee5-9574-b291421839dd",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24690,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 543,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Digital Bazaar\"",
              "body": "async function() {\n        const issuer = matchingIssuers.get(issuerName).issuers.find(\n          issuer => issuer.tags.has('vc-api'));\n        validVc = await createInitialVc({issuer});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18572,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 372,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "JoEgTT8T-tCMmd3JJUd1V",
          "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
          "_testId": "urn:uuid:ae2686db-d937-4aaf-b015-001360318886"
        },
        {
          "title": "EWF",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:00de63b4-2424-45c6-b061-36a024e607b1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25577,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 356,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:4eda00b2-6b0e-4221-8f58-af37c8089834",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25933,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 44,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:4b9b0a04-7761-4bf2-8a9e-d9df4cc9ba0e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25978,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 45,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:9bfd2b97-0cfa-44ec-a145-de20b6a942aa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26022,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 43,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:6b91518f-b3ed-482c-b155-02aa5f4321c0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26065,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 42,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:77ac168c-490c-43ae-9419-641e318639b5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26107,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 44,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:38e1da00-a3bd-4f30-9d7e-3639e3d4f567",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26152,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 42,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:f4d65e4d-1f94-4d50-b37d-f8c32622b537",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26194,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 52,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:f59a1340-4689-4f23-86af-8a18c1bc24cf",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26246,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 44,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:f8af0e9b-d9bb-46b2-8e05-096ba1917f8d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26290,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 43,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:6b508fda-00e4-4a1c-a08d-81dbdac70007",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26333,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 48,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:fcb7f9e8-850e-45a1-b57b-291285d0305d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26382,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 339,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:94a0cc30-018e-45a5-a78c-6c9c13642528",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26721,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 270,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:e35624ed-56b5-4fc9-b3eb-e6b3a915e5fb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26991,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 257,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:3abf8569-86da-415d-942d-7791680ca821",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27248,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 245,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:2f0f42f5-af57-4de6-93b0-bc7347951f12",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27493,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 209,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:05fd11d6-fe4e-4c31-b425-96d58fbe1db9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27703,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 243,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:5f0dba13-945b-4ff6-a09d-6e1b1f4965be",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27945,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 241,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"EWF\"",
              "body": "async function() {\n        const issuer = matchingIssuers.get(issuerName).issuers.find(\n          issuer => issuer.tags.has('vc-api'));\n        validVc = await createInitialVc({issuer});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25234,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 342,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "JoEgTT8T-tCMmd3JJUd1V",
          "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
          "_testId": "urn:uuid:37e36c50-e87f-404d-a7e1-15e0b4d76f05"
        },
        {
          "title": "LearnCard",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:6304b14d-20a5-458d-b238-7e58894949d2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28362,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 323,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:b2bfbf61-fefe-4ee7-b7a7-eb9528692b8f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28685,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 95,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:31c933b5-b81c-4c15-a977-954098f0897f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28781,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 90,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:97dd9b27-f731-4438-aab0-6212b0fad26a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28871,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 91,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:e85b6ce0-9bb2-4902-b18f-4b6b673cf60b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28962,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 96,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:b5f4d12c-071f-48b4-96aa-11c8b5e40376",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29058,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 90,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:1904f98c-a904-4125-b0dd-62c2c969d852",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29148,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 91,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:bc75c4b8-6851-4acc-af0b-4778f155b45c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29239,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 89,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:b1400dd1-b6cb-452e-9579-9fae4cf7b233",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29329,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 85,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:6d7767af-f72b-47c4-88af-c9807fd7425e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29415,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 128,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:b3632249-9a2e-4644-baa0-03abb6a181f0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29543,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 90,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:cb093a53-7cdd-4e23-a217-d9521ea0a8cd",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29634,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 661,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:e7d2f141-fa18-41df-a47d-f1196bde5fe0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30295,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 589,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:c5c85f7a-62ad-4c61-a067-3a07fe225fcb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30884,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 543,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:63791c4b-ea8e-4a6b-b065-e43d4f967b36",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31427,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 567,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:bb29df63-4526-4269-a8ac-059249ba7375",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31994,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 432,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:d52f5212-c781-4070-ab7c-afb98e3e3157",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32427,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 564,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:f1b36120-e0c1-489b-8e13-738d501c537d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32992,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 558,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"LearnCard\"",
              "body": "async function() {\n        const issuer = matchingIssuers.get(issuerName).issuers.find(\n          issuer => issuer.tags.has('vc-api'));\n        validVc = await createInitialVc({issuer});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28187,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 175,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "JoEgTT8T-tCMmd3JJUd1V",
          "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
          "_testId": "urn:uuid:b983034c-97b0-4fea-9e8e-0d0a41aecb48"
        },
        {
          "title": "Mavennet",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:b7b008c8-5357-4d9b-b11a-5cbf605a41d3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33723,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 587,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected HTTPError { message: [ …(6) ], …(6) } to not exist",
                "showDiff": false,
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/2018/credentials/v1\",\"https://w3id.org/security/suites/ed25519-2020/v1\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:95e70009-b55d-4726-8ee6-ce5b6fee8bfa\",\"issuer\":\"did:key:z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC\",\"issuanceDate\":\"2024-11-10T05:10:42Z\",\"proof\":{\"type\":\"Ed25519Signature2020\",\"created\":\"2024-11-10T05:10:42Z\",\"verificationMethod\":\"did:key:z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC#z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z2MYN3uG4LwbUjA15fGrmx71rA94uzK6cmgN6JD46eEUE4idYC9pErSL2Uu6amELQ4i2gmY2jHQButVCAL3gkchgC\"}},\"options\":{\"checks\":[\"proof\"]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/2018/credentials/v1",
                          "https://w3id.org/security/suites/ed25519-2020/v1"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:95e70009-b55d-4726-8ee6-ce5b6fee8bfa",
                        "issuer": "did:key:z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC",
                        "issuanceDate": "2024-11-10T05:10:42Z",
                        "proof": {
                          "type": "Ed25519Signature2020",
                          "created": "2024-11-10T05:10:42Z",
                          "verificationMethod": "did:key:z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC#z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z2MYN3uG4LwbUjA15fGrmx71rA94uzK6cmgN6JD46eEUE4idYC9pErSL2Uu6amELQ4i2gmY2jHQButVCAL3gkchgC"
                        }
                      },
                      "options": {
                        "checks": [
                          "proof"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://api.staging.refiner.neoflow.energy/credentials/verify",
                  "status": 400,
                  "data": {
                    "message": [
                      "each value in @context must be a URL address",
                      "@context must contain at least 1 elements",
                      "@context must be an array",
                      "id must be a string",
                      "id should not be empty",
                      "type must be a string"
                    ],
                    "error": "Bad Request",
                    "statusCode": 400
                  }
                },
                "operator": "notStrictEqual",
                "stack": "AssertionError: expected HTTPError { message: [ …(6) ], …(6) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:58:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:8c5ef59c-3f53-4889-982e-89e79f33f330",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34311,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 75,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:bccfe475-191b-4ef5-b976-c8b83fd43514",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34386,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 87,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:75548abc-f255-4ff0-90c2-95658385edf6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34474,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 77,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:eb3e6e1f-a1e3-4384-a644-a6585d030f02",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34552,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 93,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:e44e28e6-e11c-4576-b539-680b40d49b88",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34645,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 77,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:938d2d81-960f-4882-a2d1-c970f26f5fc6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34721,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 78,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:3ac5c91d-451f-45dd-a0b2-53b7f0e9c01b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34800,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 80,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:25a5acc2-e33d-46db-a023-993289bc5e33",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34880,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 81,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:e9dee9c1-1233-4241-b6b1-145423a1db05",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34961,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 74,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:2d21eced-0545-42ac-86fb-ea568b54ab7e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35036,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 89,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:7423d606-3091-4961-8c82-12127ca0b1e4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35125,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 468,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:1cd23ec6-eac8-4cf1-84c1-c1d117002fe0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35594,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 453,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:45e3d2c4-b682-4d68-9d25-31092a9d492e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36047,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 453,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:16a1938e-8d5e-47f1-b2e8-a234e6aac4b0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36501,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 441,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:3e8f3176-c18b-4fc1-a3dd-30a02d940a6a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36942,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 362,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:f6115059-e697-4b1f-ba64-fed5572f828f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37304,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 439,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:635d7c66-552a-4275-823f-d303191ce5d0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37744,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 474,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Mavennet\"",
              "body": "async function() {\n        const issuer = matchingIssuers.get(issuerName).issuers.find(\n          issuer => issuer.tags.has('vc-api'));\n        validVc = await createInitialVc({issuer});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33551,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 172,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "JoEgTT8T-tCMmd3JJUd1V",
          "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
          "_testId": "urn:uuid:fc9ce3ef-72c7-4735-9bf9-78fce6bfb994"
        },
        {
          "title": "SecureKey",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:8a76ed93-0560-490a-9479-17457c1d3705",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38374,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 795,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected TypeError: fetch failed { …(2) } to not exist",
                "showDiff": false,
                "actual": {
                  "requestUrl": "https://verifier-vcs.sandbox.trustbloc.dev/vc-verifier-interop/verifier/credentials/verify"
                },
                "operator": "notStrictEqual",
                "stack": "AssertionError: expected TypeError: fetch failed { …(2) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:58:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:84f36ea9-8294-498d-825f-6af38e310068",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39171,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 152,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:73:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:f2ca1ce9-7d45-42a9-8a41-89780e8ef798",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39323,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 7,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:84:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:1c37c8c8-32fe-475f-8c99-24300be0c107",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39331,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 84,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:95:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:35383343-024f-4545-9e80-68b6d1dd4414",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39414,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 7,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:107:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:a328e41d-68f2-4ee0-b586-af5f6d31e17e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39421,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 100,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:118:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:bc983fbe-3937-455b-8875-5e0d10532997",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39521,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 6,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:130:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:1e6a3283-c88a-4a9e-81aa-8b861e252c8c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39528,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 16,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:142:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:57efbaec-b21b-49ee-875e-748a8e58a473",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39543,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 22,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:154:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:b3401c51-17a8-42ed-b34b-8803c62a4858",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39567,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 6,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:166:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:c3b48b74-da1d-4a59-b72b-f94ce1655f52",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39573,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 5,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:178:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:69ca148c-be7e-4cb7-bef0-b8d1d1f72acd",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39579,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 6,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:191:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:7692d30b-335b-45d2-b7a8-f98010d051ac",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39585,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 6,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:206:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:f94200f6-0292-4c26-b1bb-e06f70b08bdb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39591,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 6,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:220:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:11ed45b1-e6f8-4395-9e3e-f003705966b0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39597,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 22,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:234:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:c3313def-3560-49ef-9b5a-9f9e98203d16",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39620,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 6,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:249:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:02771c9c-0aaf-4f05-9fc6-9529df64c2f2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39626,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 6,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:266:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:912706a9-cf95-4d47-9ddd-f43de3f7c3f0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39632,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 6,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:280:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SecureKey\"",
              "body": "async function() {\n        const issuer = matchingIssuers.get(issuerName).issuers.find(\n          issuer => issuer.tags.has('vc-api'));\n        validVc = await createInitialVc({issuer});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38217,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 157,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "JoEgTT8T-tCMmd3JJUd1V",
          "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
          "_testId": "urn:uuid:384a5228-f1dd-497c-b47f-1363e251550e"
        },
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:29c4e379-8ba7-4b3a-9bb6-6be29c679501",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39788,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 414,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:fb23f314-32e8-4132-bbf5-8b31a4d354a9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40202,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 101,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:adbde71f-3a76-4d7d-a5d6-9f4f6b3ef114",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40303,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 102,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:a9ac0060-945e-4a5a-abc4-38bfbe0cb1c0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40405,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 100,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:9bf167ee-d9ec-4ad0-a802-c2808e8631d5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40506,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 108,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:6c352d0f-2ff2-4af4-8510-70e8a2a9b9e6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40614,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 110,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:cdef09f1-518b-4479-aa2a-bcdf7fbb031b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40724,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 99,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:0606547c-753c-4b3f-ac48-41528285548d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40823,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 116,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:4292a3c1-5a4f-406a-ada3-98dfde263e95",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40939,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 96,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:91f1c709-863e-4c07-bc35-c827ce0d8f12",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41036,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 95,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:5e5cca4d-9bac-47c0-a3e9-8ba2d1793010",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41131,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 107,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:23b39dfa-ae36-4171-8ffa-f85b6159db18",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41238,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 932,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:bb990b03-66ec-4533-9d2e-30695f755bdc",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 42170,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 623,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:09444d49-e224-4344-8b04-6f65528e7358",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 42796,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 613,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:b9323f7f-1fb6-4d7c-b497-2fbda08dd835",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43410,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 605,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:2b85a09f-07dd-4f09-add9-8b8e888b3808",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44014,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 515,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:1cbe73e3-de08-4730-b21d-b56f140b58da",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44530,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 612,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:71275a73-c7be-47ce-b6b2-3ccb6ff56881",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45141,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 594,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        const issuer = matchingIssuers.get(issuerName).issuers.find(\n          issuer => issuer.tags.has('vc-api'));\n        validVc = await createInitialVc({issuer});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39638,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 150,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "JoEgTT8T-tCMmd3JJUd1V",
          "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
          "_testId": "urn:uuid:81751b3c-9bfd-4ca7-b81c-ef433c53925e"
        },
        {
          "title": "Trinsic",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:dcc45703-7516-4ac8-a2f9-3fa0cf5a77f6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45916,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 387,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:60867e51-a514-4f15-bc3c-53f22ef74bab",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46303,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 127,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:6824b97c-97d8-4cb0-92fc-ae0e056af731",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46429,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 111,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:51ec2d7a-4cc5-4fb4-8d64-d2ae51a8f078",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46540,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 112,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:7c860dbd-7808-45d9-b728-17aa546c993e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46652,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 110,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:d34a8bd1-783c-4365-bc69-12ca91d9caa8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46763,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 112,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:33c99644-627d-453a-8875-b735e5494f70",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46875,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 103,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:cf5ce088-c6c2-43e9-82d1-d19371e6a991",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46978,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 97,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:c36f9f38-1974-4822-ac34-34ba9e9adebf",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 47076,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 99,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:cddd834f-f6bd-466e-99ef-008712d3e6f1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 47175,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 114,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:6f6af19e-9957-469e-a981-dea07aff3bfa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 47289,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 96,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:d52aaf76-768e-4424-ba57-f2faaecacf5b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 47385,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1756,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:4f909b88-fa42-4151-8c42-2382fef95efe",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49142,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 704,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:ead77e91-123f-4e2f-9952-146d41f5e820",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49845,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 718,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:0b749723-1bca-4807-884a-8a6fe3b3a64a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 50563,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 671,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:7786cbe0-4c8b-4dae-a126-ea88261f58f8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51235,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 590,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:2d8eb591-80c0-4026-81b9-b5a2a9788298",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51825,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 717,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:aa2317af-8f8f-4de5-9969-e0b4068d67c3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52542,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 597,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"Trinsic\"",
              "body": "async function() {\n        const issuer = matchingIssuers.get(issuerName).issuers.find(\n          issuer => issuer.tags.has('vc-api'));\n        validVc = await createInitialVc({issuer});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45736,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 180,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "JoEgTT8T-tCMmd3JJUd1V",
          "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
          "_testId": "urn:uuid:bde381f0-ce87-46de-b158-af1f5e9bb678"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "ylaIlwgf92N607nrdcvYE",
      "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
      "summary": {},
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Verifier",
      "reportData": [],
      "_testId": "urn:uuid:29087779-4623-4187-b604-f38cb86c6edb",
      "columns": [
        "ACA-py",
        "apicatalog.com",
        "Danube Tech",
        "Digital Bazaar",
        "EWF",
        "LearnCard",
        "Mavennet",
        "SecureKey",
        "SpruceID",
        "Trinsic"
      ],
      "rows": [
        {
          "id": "MUST verify a valid VC.",
          "cells": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:2c6b1101-22c3-4710-b706-cf7880a7127f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 764,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 358,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected HTTPError: Request failed with status cod… { …(5) } to not exist",
                "showDiff": false,
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/2018/credentials/v1\",\"https://w3id.org/security/suites/ed25519-2020/v1\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:d24d4c20-675c-4193-9d19-1b731b059a95\",\"issuer\":\"did:key:z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC\",\"issuanceDate\":\"2024-11-10T05:10:09Z\",\"proof\":{\"type\":\"Ed25519Signature2020\",\"created\":\"2024-11-10T05:10:09Z\",\"verificationMethod\":\"did:key:z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC#z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z5FPS9pjectF5vGpkkjTJcbjLx8wkdsoRyQe4pypFSHb29uZi2a1UNQN1LVZcxpwE6v1Y9J43STbWFhcaCAz5FHz9\"}},\"options\":{\"checks\":[\"proof\"]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/2018/credentials/v1",
                          "https://w3id.org/security/suites/ed25519-2020/v1"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:d24d4c20-675c-4193-9d19-1b731b059a95",
                        "issuer": "did:key:z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC",
                        "issuanceDate": "2024-11-10T05:10:09Z",
                        "proof": {
                          "type": "Ed25519Signature2020",
                          "created": "2024-11-10T05:10:09Z",
                          "verificationMethod": "did:key:z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC#z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z5FPS9pjectF5vGpkkjTJcbjLx8wkdsoRyQe4pypFSHb29uZi2a1UNQN1LVZcxpwE6v1Y9J43STbWFhcaCAz5FHz9"
                        }
                      },
                      "options": {
                        "checks": [
                          "proof"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://aca-py.test-suite.app/vc/credentials/verify",
                  "status": 500
                },
                "operator": "notStrictEqual",
                "stack": "AssertionError: expected HTTPError: Request failed with status cod… { …(5) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:58:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:865abf35-064b-4b9a-9a46-7c5b7452d4eb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4210,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 314,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:07b96530-c747-477b-826c-73479c43e296",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 8286,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1163,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:db284d58-ccde-40cd-a3a6-7dd17f0b43a5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 18944,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 861,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:00de63b4-2424-45c6-b061-36a024e607b1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25577,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 356,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:6304b14d-20a5-458d-b238-7e58894949d2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28362,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 323,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:b7b008c8-5357-4d9b-b11a-5cbf605a41d3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 33723,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 587,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected HTTPError { message: [ …(6) ], …(6) } to not exist",
                "showDiff": false,
                "actual": {
                  "response": {},
                  "request": {},
                  "options": {
                    "credentials": "same-origin",
                    "headers": {},
                    "body": "{\"verifiableCredential\":{\"@context\":[\"https://www.w3.org/2018/credentials/v1\",\"https://w3id.org/security/suites/ed25519-2020/v1\"],\"type\":[\"VerifiableCredential\"],\"credentialSubject\":{\"id\":\"did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r\"},\"id\":\"urn:uuid:95e70009-b55d-4726-8ee6-ce5b6fee8bfa\",\"issuer\":\"did:key:z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC\",\"issuanceDate\":\"2024-11-10T05:10:42Z\",\"proof\":{\"type\":\"Ed25519Signature2020\",\"created\":\"2024-11-10T05:10:42Z\",\"verificationMethod\":\"did:key:z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC#z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC\",\"proofPurpose\":\"assertionMethod\",\"proofValue\":\"z2MYN3uG4LwbUjA15fGrmx71rA94uzK6cmgN6JD46eEUE4idYC9pErSL2Uu6amELQ4i2gmY2jHQButVCAL3gkchgC\"}},\"options\":{\"checks\":[\"proof\"]}}",
                    "method": "POST",
                    "json": {
                      "verifiableCredential": {
                        "@context": [
                          "https://www.w3.org/2018/credentials/v1",
                          "https://w3id.org/security/suites/ed25519-2020/v1"
                        ],
                        "type": [
                          "VerifiableCredential"
                        ],
                        "credentialSubject": {
                          "id": "did:key:z6MkhTNL7i2etLerDK8Acz5t528giE5KA4p75T6ka1E1D74r"
                        },
                        "id": "urn:uuid:95e70009-b55d-4726-8ee6-ce5b6fee8bfa",
                        "issuer": "did:key:z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC",
                        "issuanceDate": "2024-11-10T05:10:42Z",
                        "proof": {
                          "type": "Ed25519Signature2020",
                          "created": "2024-11-10T05:10:42Z",
                          "verificationMethod": "did:key:z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC#z6MkgLDQSiPPbVJWUQP3y6yZPQcitjNupxCDmsZWFhvMZ8cC",
                          "proofPurpose": "assertionMethod",
                          "proofValue": "z2MYN3uG4LwbUjA15fGrmx71rA94uzK6cmgN6JD46eEUE4idYC9pErSL2Uu6amELQ4i2gmY2jHQButVCAL3gkchgC"
                        }
                      },
                      "options": {
                        "checks": [
                          "proof"
                        ]
                      }
                    },
                    "agent": {
                      "_events": {},
                      "_eventsCount": 2,
                      "defaultPort": 443,
                      "protocol": "https:",
                      "options": {
                        "rejectUnauthorized": false,
                        "noDelay": true,
                        "path": null
                      },
                      "requests": {},
                      "sockets": {},
                      "freeSockets": {},
                      "keepAliveMsecs": 1000,
                      "keepAlive": false,
                      "maxSockets": null,
                      "maxFreeSockets": 256,
                      "scheduling": "lifo",
                      "maxTotalSockets": null,
                      "totalSocketCount": 0,
                      "maxCachedSessions": 100,
                      "_sessionCache": {
                        "map": {},
                        "list": []
                      }
                    },
                    "hooks": {
                      "beforeRequest": [],
                      "beforeRetry": [],
                      "beforeError": [],
                      "afterResponse": []
                    },
                    "prefixUrl": "",
                    "retry": {
                      "limit": 2,
                      "methods": [
                        "get",
                        "put",
                        "head",
                        "delete",
                        "options",
                        "trace"
                      ],
                      "statusCodes": [
                        408,
                        413,
                        429,
                        500,
                        502,
                        503,
                        504
                      ],
                      "afterStatusCodes": [
                        413,
                        429,
                        503
                      ],
                      "maxRetryAfter": null,
                      "backoffLimit": null
                    },
                    "throwHttpErrors": true,
                    "timeout": 10000,
                    "signal": {},
                    "duplex": "half"
                  },
                  "name": "HTTPError",
                  "requestUrl": "https://api.staging.refiner.neoflow.energy/credentials/verify",
                  "status": 400,
                  "data": {
                    "message": [
                      "each value in @context must be a URL address",
                      "@context must contain at least 1 elements",
                      "@context must be an array",
                      "id must be a string",
                      "id should not be empty",
                      "type must be a string"
                    ],
                    "error": "Bad Request",
                    "statusCode": 400
                  }
                },
                "operator": "notStrictEqual",
                "stack": "AssertionError: expected HTTPError { message: [ …(6) ], …(6) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:58:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:8a76ed93-0560-490a-9479-17457c1d3705",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 38374,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 795,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "expected TypeError: fetch failed { …(2) } to not exist",
                "showDiff": false,
                "actual": {
                  "requestUrl": "https://verifier-vcs.sandbox.trustbloc.dev/vc-verifier-interop/verifier/credentials/verify"
                },
                "operator": "notStrictEqual",
                "stack": "AssertionError: expected TypeError: fetch failed { …(2) } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:58:20)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:29c4e379-8ba7-4b3a-9bb6-6be29c679501",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39788,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 414,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:dcc45703-7516-4ac8-a2f9-3fa0cf5a77f6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45916,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 387,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"@context\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:0ddd9d7c-5383-4521-9343-a37b501bea63",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1126,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 79,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:42c5beb3-fa69-4cdb-a2a2-8f77c436dd7d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4524,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 72,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:d5b0514b-9d32-43fc-9eed-a3b76df9b3ad",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9449,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 160,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:92c5d18d-640a-4c79-b13f-a6c60dcba0e3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19806,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 108,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:4eda00b2-6b0e-4221-8f58-af37c8089834",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25933,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 44,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:b2bfbf61-fefe-4ee7-b7a7-eb9528692b8f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28685,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 95,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:8c5ef59c-3f53-4889-982e-89e79f33f330",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34311,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 75,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:84f36ea9-8294-498d-825f-6af38e310068",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39171,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 152,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:73:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:fb23f314-32e8-4132-bbf5-8b31a4d354a9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40202,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 101,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:60867e51-a514-4f15-bc3c-53f22ef74bab",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46303,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 127,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"type\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:077ebc3f-852d-4e72-842c-beccf4cbba21",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1204,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 81,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:3614a048-4289-4acc-ae37-1ced72b60ca4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4596,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 70,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:335a2e1a-a6a4-40eb-a1dd-7165673bd763",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9610,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 160,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:203921dc-fe23-46c2-85a5-df2a7e082a51",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 19913,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 100,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:4b9b0a04-7761-4bf2-8a9e-d9df4cc9ba0e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 25978,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 45,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:31c933b5-b81c-4c15-a977-954098f0897f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28781,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 90,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:bccfe475-191b-4ef5-b976-c8b83fd43514",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34386,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 87,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:f2ca1ce9-7d45-42a9-8a41-89780e8ef798",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39323,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 7,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:84:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:adbde71f-3a76-4d7d-a5d6-9f4f6b3ef114",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40303,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 102,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:6824b97c-97d8-4cb0-92fc-ae0e056af731",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46429,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 111,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"issuer\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:4e68b578-1137-4ad7-94f1-d04bf5b6022b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1285,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 91,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:95:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:e1758906-d928-4d15-9f05-bea2579db003",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4667,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 73,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:7ce0c5da-0ec2-4857-8344-9abd2db6640f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9769,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 163,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:1e670b76-7384-4390-9446-4619ad0c8f56",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20015,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 94,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:9bfd2b97-0cfa-44ec-a145-de20b6a942aa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26022,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 43,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:97dd9b27-f731-4438-aab0-6212b0fad26a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28871,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 91,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:75548abc-f255-4ff0-90c2-95658385edf6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34474,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 77,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:1c37c8c8-32fe-475f-8c99-24300be0c107",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39331,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 84,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:95:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:a9ac0060-945e-4a5a-abc4-38bfbe0cb1c0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40405,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 100,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:51ec2d7a-4cc5-4fb4-8d64-d2ae51a8f078",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46540,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 112,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"credentialSubject\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:654d4ca1-40b8-4a17-9204-81d5aeb5ea94",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1377,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 85,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:107:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:1808c282-4af9-4f31-8c0b-017fcfd26243",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4741,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 69,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:8b374d49-682a-4f67-8a37-4b5e852c61d7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 9932,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 159,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:2d77be1b-33a2-4782-a9eb-c2d20e46e332",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20108,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 95,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:6b91518f-b3ed-482c-b155-02aa5f4321c0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26065,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 42,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:e85b6ce0-9bb2-4902-b18f-4b6b673cf60b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 28962,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 96,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:eb3e6e1f-a1e3-4384-a644-a6585d030f02",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34552,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 93,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:35383343-024f-4545-9e80-68b6d1dd4414",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39414,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 7,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:107:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:9bf167ee-d9ec-4ad0-a802-c2808e8631d5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40506,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 108,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:7c860dbd-7808-45d9-b728-17aa546c993e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46652,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 110,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:30d618eb-cbd4-44d1-b805-d316311c01b1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1463,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 117,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:118:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:a79e8205-1b88-48d1-8dd3-52056bc23d38",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4810,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:d3cd8b49-5eaf-4a04-bf5b-ed5ccc1d7588",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10092,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 160,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:f130f258-7016-4a01-acc2-9bcfd89c6795",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20203,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 106,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:77ac168c-490c-43ae-9419-641e318639b5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26107,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 44,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:b5f4d12c-071f-48b4-96aa-11c8b5e40376",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29058,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 90,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:e44e28e6-e11c-4576-b539-680b40d49b88",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34645,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 77,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:a328e41d-68f2-4ee0-b586-af5f6d31e17e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39421,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 100,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:118:9)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:6c352d0f-2ff2-4af4-8510-70e8a2a9b9e6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40614,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 110,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:d34a8bd1-783c-4365-bc69-12ca91d9caa8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46763,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 112,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.type\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:04666749-d41c-45c0-8bfb-808d5bdd4fe9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1581,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 79,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:130:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:0082683d-d8f5-4296-82b5-abbdb0aca081",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4878,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 69,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:1104f897-8194-4735-abb1-01b307d62cc7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10253,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 163,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:503553a4-8b28-40b9-a7b6-ece11bc0c048",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20309,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 98,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:38e1da00-a3bd-4f30-9d7e-3639e3d4f567",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26152,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 42,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:1904f98c-a904-4125-b0dd-62c2c969d852",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29148,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 91,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:938d2d81-960f-4882-a2d1-c970f26f5fc6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34721,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 78,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:bc983fbe-3937-455b-8875-5e0d10532997",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39521,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 6,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:130:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:cdef09f1-518b-4479-aa2a-bcdf7fbb031b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40724,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 99,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:33c99644-627d-453a-8875-b735e5494f70",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46875,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 103,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.created\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:4807d7db-c9d2-489c-b2a8-e1ce62139d3c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1661,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 105,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:142:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:96854b8c-7f1b-4ae0-9d2e-063b1ca7eb0c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 4947,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 73,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:28d40fd1-4ace-440b-ac8a-fdb31a34b8e9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10416,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 293,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:1543e7a0-3264-4c16-836b-4af5001d85db",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 20407,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 820,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:f4d65e4d-1f94-4d50-b37d-f8c32622b537",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26194,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 52,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:bc75c4b8-6851-4acc-af0b-4778f155b45c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29239,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 89,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:3ac5c91d-451f-45dd-a0b2-53b7f0e9c01b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34800,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 80,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:1e6a3283-c88a-4a9e-81aa-8b861e252c8c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39528,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 16,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:142:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:0606547c-753c-4b3f-ac48-41528285548d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40823,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 116,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:cf5ce088-c6c2-43e9-82d1-d19371e6a991",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 46978,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 97,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.verificationMethod\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:a9853871-16b8-401f-a190-4929c600aa46",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1768,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 86,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:154:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:d109f665-f356-4daa-839f-4c9651770b1b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5020,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 68,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:1b4d8fb1-e877-4a61-89d9-41f1893dba20",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10709,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 162,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:d219d7ca-88ca-4722-a0ca-2ac75dc47998",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21227,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 110,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:f59a1340-4689-4f23-86af-8a18c1bc24cf",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26246,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 44,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:b1400dd1-b6cb-452e-9579-9fae4cf7b233",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29329,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 85,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:25a5acc2-e33d-46db-a023-993289bc5e33",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34880,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 81,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:57efbaec-b21b-49ee-875e-748a8e58a473",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39543,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 22,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:154:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:4292a3c1-5a4f-406a-ada3-98dfde263e95",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 40939,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 96,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:c36f9f38-1974-4822-ac34-34ba9e9adebf",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 47076,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 99,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.proofValue\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:d4fd70ed-23e8-469d-8a62-d557f405c83e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1855,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 96,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:166:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:1118b272-27fe-48fb-a591-858c85e66a16",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5089,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 70,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:31223f8f-4377-4cc5-9cae-580255d1f6c0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 10871,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 296,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:5a391e4c-4d3f-41ec-acc3-741d8ac980c1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21337,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 105,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:f8af0e9b-d9bb-46b2-8e05-096ba1917f8d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26290,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 43,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:6d7767af-f72b-47c4-88af-c9807fd7425e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29415,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 128,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:e9dee9c1-1233-4241-b6b1-145423a1db05",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 34961,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 74,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:b3401c51-17a8-42ed-b34b-8803c62a4858",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39567,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 6,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:166:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:91f1c709-863e-4c07-bc35-c827ce0d8f12",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41036,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 95,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:cddd834f-f6bd-466e-99ef-008712d3e6f1",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 47175,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 114,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.proofPurpose\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:fdeff785-2ced-480d-8319-09581ac1c130",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 1952,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 85,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:178:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:475ef424-834e-4373-87b6-e14795963632",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5158,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 72,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:354b6d28-0e86-49d8-96bd-cd11f035a2bb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11168,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 292,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:07fbc139-95d9-4efc-be17-9373fe3b2030",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21442,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 97,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:6b508fda-00e4-4a1c-a08d-81dbdac70007",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26333,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 48,
              "state": "passed",
              "speed": "medium"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:b3632249-9a2e-4644-baa0-03abb6a181f0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29543,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 90,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:2d21eced-0545-42ac-86fb-ea568b54ab7e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35036,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 89,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:c3b48b74-da1d-4a59-b72b-f94ce1655f52",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39573,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 5,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:178:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:5e5cca4d-9bac-47c0-a3e9-8ba2d1793010",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41131,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 107,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:6f6af19e-9957-469e-a981-dea07aff3bfa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 47289,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 96,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"@context\" is not an array.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:db61926f-0dc1-42d0-84b1-74941c304c7e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2037,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 693,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:be909b62-7488-4cab-9530-81533104eff2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5231,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 469,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:2f860bba-6009-4cec-98d4-9b575bf94170",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 11461,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1559,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:791ce674-931e-436b-9a09-65ba0e7e118a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 21540,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 541,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:fcb7f9e8-850e-45a1-b57b-291285d0305d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26382,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 339,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:cb093a53-7cdd-4e23-a217-d9521ea0a8cd",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 29634,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 661,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:7423d606-3091-4961-8c82-12127ca0b1e4",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35125,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 468,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:69ca148c-be7e-4cb7-bef0-b8d1d1f72acd",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39579,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 6,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:191:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:23b39dfa-ae36-4171-8ffa-f85b6159db18",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 41238,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 932,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:d52aaf76-768e-4424-ba57-f2faaecacf5b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 47385,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 1756,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"@context\" items are not strings.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:44d81f40-c3db-46c6-b343-b2d927c7db98",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2730,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 156,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:206:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:d4398a25-3231-4fac-9d26-bbdbeb25d410",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 5700,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 417,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:29b8a0e6-923d-401b-9d91-4bbb3c3b150d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13019,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 942,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:adaa6417-4530-4fe5-96d2-4a23b70e42c6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22081,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 538,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:94a0cc30-018e-45a5-a78c-6c9c13642528",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26721,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 270,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:e7d2f141-fa18-41df-a47d-f1196bde5fe0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30295,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 589,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:1cd23ec6-eac8-4cf1-84c1-c1d117002fe0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 35594,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 453,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:7692d30b-335b-45d2-b7a8-f98010d051ac",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39585,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 6,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:206:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:bb990b03-66ec-4533-9d2e-30695f755bdc",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 42170,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 623,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:4f909b88-fa42-4151-8c42-2382fef95efe",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49142,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 704,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"type\" is not an array.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:e9d0894c-3dbd-4a19-9389-231bd4a6d7f0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 2887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 462,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:8ac9196b-4e52-476f-aa2d-f2157907084c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6116,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 420,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:3f70f945-5aee-42f4-8f35-9e12d6d91e5a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 13961,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 950,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:4d66ceea-0912-4a2a-984d-29a02284e9fe",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 22619,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 532,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:e35624ed-56b5-4fc9-b3eb-e6b3a915e5fb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 26991,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 257,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:c5c85f7a-62ad-4c61-a067-3a07fe225fcb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 30884,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 543,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:45e3d2c4-b682-4d68-9d25-31092a9d492e",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36047,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 453,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:f94200f6-0292-4c26-b1bb-e06f70b08bdb",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39591,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 6,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:220:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:09444d49-e224-4344-8b04-6f65528e7358",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 42796,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 613,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:ead77e91-123f-4e2f-9952-146d41f5e820",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 49845,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 718,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"type\" items are not strings.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:07abe714-e780-43cf-bde0-6c50368d1b8c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3348,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 464,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:3b30da2d-b016-4978-bb66-cb7754bde23c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6537,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 417,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:e5d2fe60-fc75-4be5-8b78-2146a1e2d0a9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 14912,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 949,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:fa7e69d7-adcd-4b0e-a6ae-72c8cde392d6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23151,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 543,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:3abf8569-86da-415d-942d-7791680ca821",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27248,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 245,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:63791c4b-ea8e-4a6b-b065-e43d4f967b36",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31427,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 567,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:16a1938e-8d5e-47f1-b2e8-a234e6aac4b0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36501,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 441,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:11ed45b1-e6f8-4395-9e3e-f003705966b0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39597,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 22,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:234:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:b9323f7f-1fb6-4d7c-b497-2fbda08dd835",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 43410,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 605,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:0b749723-1bca-4807-884a-8a6fe3b3a64a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 50563,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 671,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"issuer\" is not an object or a string.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:0c05966c-2c0d-4c5b-a2e7-51039228a26c",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3812,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 80,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:249:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:a4b38482-2cba-47a6-b977-cc68e2052711",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 6954,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 354,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:bc8c561c-2611-45df-adbd-f1fc08249d7f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 15861,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 803,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:fb179816-d882-4c01-b5b6-39b6ceb55de0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 23694,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 461,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:2f0f42f5-af57-4de6-93b0-bc7347951f12",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27493,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 209,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:bb29df63-4526-4269-a8ac-059249ba7375",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 31994,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 432,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:3e8f3176-c18b-4fc1-a3dd-30a02d940a6a",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 36942,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 362,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:c3313def-3560-49ef-9b5a-9f9e98203d16",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39620,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 6,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:249:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:2b85a09f-07dd-4f09-add9-8b8e888b3808",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44014,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 515,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:7786cbe0-4c8b-4dae-a126-ea88261f58f8",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51235,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 590,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"credentialSubject\" is not an object.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:20a8f108-0dc1-4903-ad66-d8ad1fe75c7d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3893,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 80,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:266:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:baae079a-feb9-488b-a7a6-98c3729df0df",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7308,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 423,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:05fb1f8c-2cfd-4f83-a6f5-2c4bde268ed0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 16664,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 952,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:b1aec731-9638-403c-9631-2d4480275e41",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24156,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 535,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:05fd11d6-fe4e-4c31-b425-96d58fbe1db9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27703,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 243,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:d52f5212-c781-4070-ab7c-afb98e3e3157",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32427,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 564,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:f6115059-e697-4b1f-ba64-fed5572f828f",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37304,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 439,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:02771c9c-0aaf-4f05-9fc6-9529df64c2f2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39626,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 6,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:266:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:1cbe73e3-de08-4730-b21d-b56f140b58da",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 44530,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 612,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:2d8eb591-80c0-4026-81b9-b5a2a9788298",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 51825,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 717,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof\" is not an object.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "2CWKwuopcwHCEu_bhSaHV",
              "ctx": null,
              "_testId": "urn:uuid:251c73dd-a569-4d4a-b5ad-0b6e0a0263c0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "ACA-py",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 3974,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 82,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]",
                "showDiff": true,
                "actual": 500,
                "expected": [
                  400,
                  422
                ],
                "operator": "deepStrictEqual",
                "stack": "AssertionError: Expected status code 400 or 422.: expected 500 to be one of [ 400, 422 ]\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:15:26)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:280:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "WognxzAJxdGimBfyOFLzY",
              "ctx": null,
              "_testId": "urn:uuid:eec16244-da3e-4ab8-9efb-35a8c31b8de6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "apicatalog.com",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 7731,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 417,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "93TyjzBIS00mn7t60StUB",
              "ctx": null,
              "_testId": "urn:uuid:be7b21a1-9041-4faa-94e4-38389ee65a4b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Danube Tech",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 17616,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 955,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "t1dgn45mlRlpRo5_p7tIT",
              "ctx": null,
              "_testId": "urn:uuid:6e6d3f7e-faed-4ee5-9574-b291421839dd",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Digital Bazaar",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 24690,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 543,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "PrynJ1q_zy0OkDGCTRb86",
              "ctx": null,
              "_testId": "urn:uuid:5f0dba13-945b-4ff6-a09d-6e1b1f4965be",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "EWF",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 27945,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 241,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "3ok1amy0_kYreQ6DDm0w8",
              "ctx": null,
              "_testId": "urn:uuid:f1b36120-e0c1-489b-8e13-738d501c537d",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "LearnCard",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 32992,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 558,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "h69Sj2j9zkV5ENYCdZbLi",
              "ctx": null,
              "_testId": "urn:uuid:635d7c66-552a-4275-823f-d303191ce5d0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Mavennet",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 37744,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 474,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "tsr21UPXmfN9EH3HN9dgE",
              "ctx": null,
              "_testId": "urn:uuid:912706a9-cf95-4d47-9ddd-f43de3f7c3f0",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SecureKey",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 39632,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 6,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected an HTTP error response code: expected undefined to exist",
                "showDiff": false,
                "operator": "strictEqual",
                "stack": "AssertionError: Expected an HTTP error response code: expected undefined to exist\n    at should.exist (node_modules/chai/lib/chai/interface/should.js:144:34)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:14:10)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js:280:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "GQfXMoP2SxHjs92SeG7vi",
              "ctx": null,
              "_testId": "urn:uuid:71275a73-c7be-47ce-b6b2-3ccb6ff56881",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 45141,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 594,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/10-vc-di.js",
              "parent": "XVGwJI9jqTJV1qqLJCEoO",
              "ctx": null,
              "_testId": "urn:uuid:aa2317af-8f8f-4de5-9969-e0b4068d67c3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "Trinsic",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 52542,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 597,
              "state": "passed",
              "speed": "slow"
            }
          ]
        }
      ]
    },
    {
      "title": "Verify Credential - JWT",
      "ctx": null,
      "suites": [
        {
          "title": "SpruceID",
          "ctx": null,
          "suites": [],
          "tests": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:44bd5a46-4541-4a4b-9ff8-164edbff7bd7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53528,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 110,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:ad07d297-b4a3-460a-8bd5-2c2096ecf3f9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53639,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 145,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:f6c5bc38-dd9f-411c-8f96-8fa0a53f257b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53785,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 102,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:a8b10d2e-2151-4899-ac6f-b915e7c44784",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 106,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:c896806b-a8bd-4927-8b59-5ade8fc54ef3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53992,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 105,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:78ef1750-2d2a-4f7d-b99f-ab8d5b0a1159",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54098,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 102,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:dadf4d5d-4801-4271-a459-5e06a0eecd54",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54199,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 102,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:ccd0a9bd-abfa-4ea8-9c9a-1eba5be68507",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54302,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 125,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response { status: 200, statusText: 'OK', headers: Headers { date: 'Sun, 10 Nov 2024 05:11:03 GMT', 'content-type': 'application/json', 'content-length': '46', connection: 'keep-alive', 'cf-cache-status': 'DYNAMIC', server: 'cloudflare', 'cf-ray': '8e038a24e8ae7c79-LAX', Authorization: '** SANITIZED TO PREVENT EXPOSING OF SECRETS ***' }, body: ReadableStream { locked: false, state: 'readable', supportsBYOB: true }, bodyUsed: false, ok: true, redirected: false, type: 'default', url: '' } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response { status: 200, statusText: 'OK', headers: Headers { date: 'Sun, 10 Nov 2024 05:11:03 GMT', 'content-type': 'application/json', 'content-length': '46', connection: 'keep-alive', 'cf-cache-status': 'DYNAMIC', server: 'cloudflare', 'cf-ray': '8e038a24e8ae7c79-LAX', Authorization: '** SANITIZED TO PREVENT EXPOSING OF SECRETS ***' }, body: ReadableStream { locked: false, state: 'readable', supportsBYOB: true }, bodyUsed: false, ok: true, redirected: false, type: 'default', url: '' } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js:141:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:7314920d-a748-4bf1-bf33-7a373193a118",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54427,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 116,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:86abb370-049e-4f26-9db3-86b1e30e97fa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54543,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 102,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:7f408f5c-8ca1-417c-a4cc-186aae34cce5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54646,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 98,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:642f8b7d-13e9-49e0-9c1c-4c6701ecbef2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54744,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 827,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:b042ac8f-8fe0-4912-bec6-068d5a708c77",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 55571,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 594,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:7bddaeb8-47e3-479b-96e2-bbb07c58f136",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56165,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 586,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:e4b7d9d0-cfbc-40a6-b437-1a80e430a4e5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56752,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 575,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:e1440855-3472-4c0b-8c0d-f621396a1ab6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57327,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 512,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:1d3b9209-4c16-4e4d-b45e-535aafaa7855",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57839,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 583,
              "state": "passed",
              "speed": "slow"
            },
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:5de2083d-429e-427e-8e31-3ac351fbb289",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 58421,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 582,
              "state": "passed",
              "speed": "slow"
            }
          ],
          "root": false,
          "pending": false,
          "_retries": -1,
          "_beforeEach": [],
          "_beforeAll": [
            {
              "title": "\"before all\" hook in \"SpruceID\"",
              "body": "async function() {\n        const issuer = matchingIssuers.get(issuerNameJWT).issuers.find(\n          issuer => issuer.tags.has('JWT'));\n        validVc = await createInitialVc({issuer});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "type": "hook",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "originalTitle": "\"before all\" hook",
              "_events": {},
              "_eventsCount": 1,
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53140,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 388,
              "_error": null
            }
          ],
          "_afterEach": [],
          "_afterAll": [],
          "_timeout": 15000,
          "_slow": 75,
          "_bail": false,
          "_onlyTests": [],
          "_onlySuites": [],
          "delayed": false,
          "parent": "IkvI-GzImr40CSgBkpHEA",
          "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
          "_testId": "urn:uuid:98548f38-15cb-4f5f-a604-d2eead3cd2ee"
        }
      ],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "ylaIlwgf92N607nrdcvYE",
      "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
      "summary": {},
      "matrix": true,
      "report": true,
      "rowLabel": "Test Name",
      "columnLabel": "Verifier",
      "reportData": [],
      "_testId": "urn:uuid:a576dea0-927c-437c-aea4-cfc479f96b61",
      "columns": [
        "SpruceID"
      ],
      "rows": [
        {
          "id": "MUST verify a valid VC.",
          "cells": [
            {
              "type": "test",
              "title": "MUST verify a valid VC.",
              "body": "async function() {\n        // this tells the test report which cell in the interop matrix\n        // the result goes in\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const body = createRequestBody({vc: validVc});\n        const {result, error} = await verifier.post({json: body});\n        should.not.exist(error);\n        should.exist(result);\n        should.exist(result.status);\n        result.status.should.equal(200);\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:44bd5a46-4541-4a4b-9ff8-164edbff7bd7",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST verify a valid VC."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53528,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 110,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"@context\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noContextVc = klona(validVc);\n          delete noContextVc['@context'];\n          const body = createRequestBody({vc: noContextVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:ad07d297-b4a3-460a-8bd5-2c2096ecf3f9",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53639,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 145,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"type\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"type\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noTypeVc = klona(validVc);\n        delete noTypeVc.type;\n        const body = createRequestBody({vc: noTypeVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:f6c5bc38-dd9f-411c-8f96-8fa0a53f257b",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53785,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 102,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"issuer\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noIssuerVc = klona(validVc);\n        delete noIssuerVc.issuer;\n        const body = createRequestBody({vc: noIssuerVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:a8b10d2e-2151-4899-ac6f-b915e7c44784",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"issuer\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53887,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 106,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"credentialSubject\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noCredentialSubjectVc = klona(validVc);\n          delete noCredentialSubjectVc.credentialSubject;\n          const body = createRequestBody({vc: noCredentialSubjectVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:c896806b-a8bd-4927-8b59-5ade8fc54ef3",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"credentialSubject\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 53992,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 105,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" property is missing.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const noProofVc = klona(validVc);\n        delete noProofVc.proof;\n        const body = createRequestBody({vc: noProofVc});\n        const {result, error} = await verifier.post({json: body});\n        testBadRequestError({result, error});\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:78ef1750-2d2a-4f7d-b99f-ab8d5b0a1159",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54098,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 102,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.type\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof.type\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofTypeVc = klona(validVc);\n          delete noProofTypeVc.proof.type;\n          const body = createRequestBody({vc: noProofTypeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:dadf4d5d-4801-4271-a459-5e06a0eecd54",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.type\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54199,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 102,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.created\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof.created\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofCreatedVc = klona(validVc);\n          delete noProofCreatedVc.proof.created;\n          const body = createRequestBody({vc: noProofCreatedVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:ccd0a9bd-abfa-4ea8-9c9a-1eba5be68507",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.created\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54302,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 125,
              "state": "failed",
              "err": {
                "name": "AssertionError",
                "message": "Expected no result from verifier: expected Response { status: 200, statusText: 'OK', headers: Headers { date: 'Sun, 10 Nov 2024 05:11:03 GMT', 'content-type': 'application/json', 'content-length': '46', connection: 'keep-alive', 'cf-cache-status': 'DYNAMIC', server: 'cloudflare', 'cf-ray': '8e038a24e8ae7c79-LAX', Authorization: '** SANITIZED TO PREVENT EXPOSING OF SECRETS ***' }, body: ReadableStream { locked: false, state: 'readable', supportsBYOB: true }, bodyUsed: false, ok: true, redirected: false, type: 'default', url: '' } to not exist",
                "showDiff": false,
                "actual": {},
                "operator": "notStrictEqual",
                "stack": "AssertionError: Expected no result from verifier: expected Response { status: 200, statusText: 'OK', headers: Headers { date: 'Sun, 10 Nov 2024 05:11:03 GMT', 'content-type': 'application/json', 'content-length': '46', connection: 'keep-alive', 'cf-cache-status': 'DYNAMIC', server: 'cloudflare', 'cf-ray': '8e038a24e8ae7c79-LAX', Authorization: '** SANITIZED TO PREVENT EXPOSING OF SECRETS ***' }, body: ReadableStream { locked: false, state: 'readable', supportsBYOB: true }, bodyUsed: false, ok: true, redirected: false, type: 'default', url: '' } to not exist\n    at should.not.exist (node_modules/chai/lib/chai/interface/should.js:208:38)\n    at testBadRequestError (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/helpers.js:12:14)\n    at Context.<anonymous> (file:///home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js:141:11)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)"
              }
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.verificationMethod\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof.verificationMethod\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofVerificationMethodVc = klona(validVc);\n          delete noProofVerificationMethodVc.proof.verificationMethod;\n          const body = createRequestBody({vc: noProofVerificationMethodVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:7314920d-a748-4bf1-bf33-7a373193a118",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.verificationMethod\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54427,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 116,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.proofValue\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofValue\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofValueVc = klona(validVc);\n          delete noProofValueVc.proof.proofValue;\n          const body = createRequestBody({vc: noProofValueVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:86abb370-049e-4f26-9db3-86b1e30e97fa",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.proofValue\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54543,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 102,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.proofPurpose\" property is missing.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof.proofPurpose\" property is missing.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const noProofPurposeVc = klona(validVc);\n          delete noProofPurposeVc.proof.proofPurpose;\n          const body = createRequestBody({vc: noProofPurposeVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:7f408f5c-8ca1-417c-a4cc-186aae34cce5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof.proofPurpose\" property is missing."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54646,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 98,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"@context\" is not an array.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidContextTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidContextType of invalidContextTypes) {\n          copyVc['@context'] = invalidContextType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:642f8b7d-13e9-49e0-9c1c-4c6701ecbef2",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 54744,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 827,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"@context\" items are not strings.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"@context\" items are not strings.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidContextItemTypes = [[], {}, null, undefined, 10, true];\n          for(const invalidContextItemType of invalidContextItemTypes) {\n            copyVc['@context'] = [invalidContextItemType];\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:b042ac8f-8fe0-4912-bec6-068d5a708c77",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"@context\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 55571,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 594,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"type\" is not an array.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"type\" is not an array.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypes = ['string', {}, null, undefined, 10, true];\n        for(const invalidType of invalidTypes) {\n          copyVc.type = invalidType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:7bddaeb8-47e3-479b-96e2-bbb07c58f136",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" is not an array."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56165,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 586,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"type\" items are not strings.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"type\" items are not strings.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidTypeItemTypes = [[], {}, null, undefined, 10, true];\n        for(const invalidItemType of invalidTypeItemTypes) {\n          copyVc.type = [invalidItemType];\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:e4b7d9d0-cfbc-40a6-b437-1a80e430a4e5",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"type\" items are not strings."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 56752,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 575,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"issuer\" is not an object or a string.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"issuer\" is not an object or a string.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidIssuerTypes = [[], null, undefined, 10, true];\n          for(const invalidIssuerType of invalidIssuerTypes) {\n            copyVc.issuer = invalidIssuerType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:e1440855-3472-4c0b-8c0d-f621396a1ab6",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"issuer\" is not an object or a string."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57327,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 512,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"credentialSubject\" is not an object.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"credentialSubject\" is not an object.",
              "body": "async function() {\n          this.test.cell = {\n            columnId: verifierName,\n            rowId: this.test.title\n          };\n          const copyVc = klona(validVc);\n          const invalidCredentialSubjectTypes = [\n            'string', null, undefined, 10, true, []\n          ];\n          for(const invalidType of invalidCredentialSubjectTypes) {\n            copyVc.credentialSubject = invalidType;\n            const body = createRequestBody({vc: copyVc});\n            const {result, error} = await verifier.post({json: body});\n            testBadRequestError({result, error});\n          }\n        }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:1d3b9209-4c16-4e4d-b45e-535aafaa7855",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"credentialSubject\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 57839,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 583,
              "state": "passed",
              "speed": "slow"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof\" is not an object.",
          "cells": [
            {
              "type": "test",
              "title": "MUST not verify if \"proof\" is not an object.",
              "body": "async function() {\n        this.test.cell = {\n          columnId: verifierName,\n          rowId: this.test.title\n        };\n        const copyVc = klona(validVc);\n        const invalidProofTypes = ['string', null, undefined, 10, true, []];\n        for(const invalidProofType of invalidProofTypes) {\n          copyVc.proof = invalidProofType;\n          const body = createRequestBody({vc: copyVc});\n          const {result, error} = await verifier.post({json: body});\n          testBadRequestError({result, error});\n        }\n      }",
              "async": 0,
              "sync": true,
              "_timeout": 15000,
              "_slow": 75,
              "_retries": -1,
              "timedOut": false,
              "_currentRetry": 0,
              "pending": false,
              "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/11-vc-jwt.js",
              "parent": "Hf00QLEuQElCPd6eiGdYX",
              "ctx": null,
              "_testId": "urn:uuid:5de2083d-429e-427e-8e31-3ac351fbb289",
              "_events": {},
              "_eventsCount": 1,
              "cell": {
                "columnId": "SpruceID",
                "rowId": "MUST not verify if \"proof\" is not an object."
              },
              "timer": {
                "_idleTimeout": -1,
                "_idlePrev": null,
                "_idleNext": null,
                "_idleStart": 58421,
                "_onTimeout": null,
                "_repeat": null,
                "_destroyed": true
              },
              "duration": 582,
              "state": "passed",
              "speed": "slow"
            }
          ]
        }
      ]
    },
    {
      "title": "Verify Presentation - Data Integrity",
      "ctx": null,
      "suites": [],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "ylaIlwgf92N607nrdcvYE",
      "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/12-vp-di.js",
      "summary": {},
      "matrix": true,
      "report": true,
      "columns": [],
      "rows": []
    },
    {
      "title": "Verify Presentation - JWT",
      "ctx": null,
      "suites": [],
      "root": false,
      "pending": false,
      "_retries": -1,
      "_beforeEach": [],
      "_beforeAll": [],
      "_afterEach": [],
      "_afterAll": [],
      "_timeout": 15000,
      "_slow": 75,
      "_bail": false,
      "_onlyTests": [],
      "_onlySuites": [],
      "delayed": false,
      "parent": "ylaIlwgf92N607nrdcvYE",
      "file": "/home/runner/work/vc-api-verifier-test-suite/vc-api-verifier-test-suite/tests/13-vp-jwt.js",
      "summary": {},
      "matrix": true,
      "report": true,
      "columns": [],
      "rows": []
    },
    {
      "title": "At Risk",
      "rowLabel": "Statement",
      "columnLabel": "Reason",
      "columns": [
        "At least 2 passing implementations"
      ],
      "rows": [
        {
          "id": "MUST verify a valid VC.",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "MUST not verify if \"@context\" property is missing.",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "MUST not verify if \"type\" property is missing.",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "MUST not verify if \"issuer\" property is missing.",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "MUST not verify if \"credentialSubject\" property is missing.",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof\" property is missing.",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.type\" property is missing.",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.created\" property is missing.",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.verificationMethod\" property is missing.",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.proofValue\" property is missing.",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof.proofPurpose\" property is missing.",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "MUST not verify if \"@context\" is not an array.",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "MUST not verify if \"@context\" items are not strings.",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "MUST not verify if \"type\" is not an array.",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "MUST not verify if \"type\" items are not strings.",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "MUST not verify if \"issuer\" is not an object or a string.",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "MUST not verify if \"credentialSubject\" is not an object.",
          "cells": [
            {
              "state": "failed"
            }
          ]
        },
        {
          "id": "MUST not verify if \"proof\" is not an object.",
          "cells": [
            {
              "state": "failed"
            }
          ]
        }
      ]
    }
  ],
  "tables": [],
  "summary": [],
  "respecConfig": {
    "specStatus": "unofficial",
    "shortName": "vc-api-verifier-test-suite",
    "subtitle": "Test Interoperability Report for Verifiable Credentials API Verifier",
    "github": "https://github.com/w3c-ccg/vc-api-verifier-test-suite",
    "edDraftURI": "https://w3c-ccg.github.io/vc-api/#verify-credential",
    "doJsonLd": true,
    "includePermalinks": false,
    "editors": [
      {
        "name": "Tashi D. Gyeltshen",
        "url": "https://github.com/JSAssassin",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      }
    ],
    "authors": [
      {
        "name": "Tashi D. Gyeltshen",
        "url": "https://github.com/JSAssassin",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      },
      {
        "name": "Manu Sporny",
        "url": "http://manu.sporny.org/",
        "company": "Digital Bazaar",
        "companyURL": "http://digitalbazaar.com/"
      }
    ]
  },
  "title": "VC API Verifier Interoperability Report 1.0",
  "stats": [
    "Tests passed 165/198 83%",
    "Tests failed 33/198 17%",
    "Failures 33",
    "Tests skipped 0",
    "Total tests 198"
  ],
  "statusMarkLabels": {
    "pending": {
      "icon": "🚫",
      "label": "Pending"
    },
    "passed": {
      "icon": "✓",
      "label": "Passed"
    },
    "failed": {
      "icon": "❌",
      "label": "Failed"
    },
    "accessDenied": {
      "icon": "⊘",
      "label": "Access Denied"
    },
    "timeout": {
      "icon": "⏱",
      "label": "Timeout"
    },
    "notImplemented": {
      "icon": "—",
      "label": "Not Implemented"
    }
  }
}